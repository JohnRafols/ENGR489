'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

/**
 * Deeply clones an object or array
 * @param  {Mixed} obj The object/array to clone
 * @return {Mixed}     A clone of the initial object or array
 */
axe.utils.clone = function (obj) {
	'use strict';

	var index,
	    length,
	    out = obj;

	if (obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
		if (Array.isArray(obj)) {
			out = [];
			for (index = 0, length = obj.length; index < length; index++) {
				out[index] = axe.utils.clone(obj[index]);
			}
		} else {
			out = {};
			// jshint forin: false
			for (index in obj) {
				out[index] = axe.utils.clone(obj[index]);
			}
		}
	}
	return out;
};
