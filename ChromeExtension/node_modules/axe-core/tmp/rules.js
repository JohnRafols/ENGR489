"use strict";axe._load({"data":{"rules":{"accesskeys":{"description":"Ensures every accesskey attribute value is unique","help":"accesskey attribute value must be unique"},"area-alt":{"description":"Ensures <area> elements of image maps have alternate text","help":"Active <area> elements must have alternate text"},"aria-allowed-attr":{"description":"Ensures ARIA attributes are allowed for an element's role","help":"Elements must only use allowed ARIA attributes"},"aria-required-attr":{"description":"Ensures elements with ARIA roles have all required ARIA attributes","help":"Required ARIA attributes must be provided"},"aria-required-children":{"description":"Ensures elements with an ARIA role that require child roles contain them","help":"Certain ARIA roles must contain particular children"},"aria-required-parent":{"description":"Ensures elements with an ARIA role that require parent roles are contained by them","help":"Certain ARIA roles must be contained by particular parents"},"aria-roles":{"description":"Ensures all elements with a role attribute use a valid value","help":"ARIA roles used must conform to valid values"},"aria-valid-attr-value":{"description":"Ensures all ARIA attributes have valid values","help":"ARIA attributes must conform to valid values"},"aria-valid-attr":{"description":"Ensures attributes that begin with aria- are valid ARIA attributes","help":"ARIA attributes must conform to valid names"},"audio-caption":{"description":"Ensures <audio> elements have captions","help":"<audio> elements must have a captions track"},"blink":{"description":"Ensures <blink> elements are not used","help":"<blink> elements are deprecated and must not be used"},"button-name":{"description":"Ensures buttons have discernible text","help":"Buttons must have discernible text"},"bypass":{"description":"Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content","help":"Page must have means to bypass repeated blocks"},"checkboxgroup":{"description":"Ensures related <input type=\"checkbox\"> elements have a group and that that group designation is consistent","help":"Checkbox inputs with the same name attribute value must be part of a group"},"color-contrast":{"description":"Ensures the contrast between foreground and background colors meets WCAG 2 AA contrast ratio thresholds","help":"Elements must have sufficient color contrast"},"definition-list":{"description":"Ensures <dl> elements are structured correctly","help":"<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script> or <template> elements"},"dlitem":{"description":"Ensures <dt> and <dd> elements are contained by a <dl>","help":"<dt> and <dd> elements must be contained by a <dl>"},"document-title":{"description":"Ensures each HTML document contains a non-empty <title> element","help":"Documents must have <title> element to aid in navigation"},"duplicate-id":{"description":"Ensures every id attribute value is unique","help":"id attribute value must be unique"},"empty-heading":{"description":"Ensures headings have discernible text","help":"Headings must not be empty"},"frame-title":{"description":"Ensures <iframe> and <frame> elements contain a unique and non-empty title attribute","help":"Frames must have unique title attribute"},"heading-order":{"description":"Ensures the order of headings is semantically correct","help":"Heading levels should only increase by one"},"html-has-lang":{"description":"Ensures every HTML document has a lang attribute","help":"<html> element must have a lang attribute"},"html-lang-valid":{"description":"Ensures the lang attribute of the <html> element has a valid value","help":"<html> element must have a valid value for the lang attribute"},"image-alt":{"description":"Ensures <img> elements have alternate text or a role of none or presentation","help":"Images must have alternate text"},"image-redundant-alt":{"description":"Ensure button and link text is not repeated as image alternative","help":"Text of buttons and links should not be repeated in the image alternative"},"input-image-alt":{"description":"Ensures <input type=\"image\"> elements have alternate text","help":"Image buttons must have alternate text"},"label-title-only":{"description":"Ensures that every form element is not solely labeled using the title or aria-describedby attributes","help":"Form elements should have a visible label"},"label":{"description":"Ensures every form element has a label","help":"Form elements must have labels"},"layout-table":{"description":"Ensures presentational <table> elements do not use <th>, <caption> elements or the summary attribute","help":"Layout tables must not use data table elements"},"link-in-text-block":{"description":"Links can be distinguished without relying on color","help":"Links must be distinguished from surrounding text in a way that does not rely on color"},"link-name":{"description":"Ensures links have discernible text","help":"Links must have discernible text"},"list":{"description":"Ensures that lists are structured correctly","help":"<ul> and <ol> must only directly contain <li>, <script> or <template> elements"},"listitem":{"description":"Ensures <li> elements are used semantically","help":"<li> elements must be contained in a <ul> or <ol>"},"marquee":{"description":"Ensures <marquee> elements are not used","help":"<marquee> elements are deprecated and must not be used"},"meta-refresh":{"description":"Ensures <meta http-equiv=\"refresh\"> is not used","help":"Timed refresh must not exist"},"meta-viewport-large":{"description":"Ensures <meta name=\"viewport\"> can scale a significant amount","help":"Users should be able to zoom and scale the text up to 500%"},"meta-viewport":{"description":"Ensures <meta name=\"viewport\"> does not disable text scaling and zooming","help":"Zooming and scaling must not be disabled"},"object-alt":{"description":"Ensures <object> elements have alternate text","help":"<object> elements must have alternate text"},"radiogroup":{"description":"Ensures related <input type=\"radio\"> elements have a group and that the group designation is consistent","help":"Radio inputs with the same name attribute value must be part of a group"},"region":{"description":"Ensures all content is contained within a landmark region","help":"Content should be contained in a landmark region"},"scope-attr-valid":{"description":"Ensures the scope attribute is used correctly on tables","help":"scope attribute should be used correctly"},"server-side-image-map":{"description":"Ensures that server-side image maps are not used","help":"Server-side image maps must not be used"},"skip-link":{"description":"Ensures the first link on the page is a skip link","help":"The page should have a skip link as its first link"},"tabindex":{"description":"Ensures tabindex attribute values are not greater than 0","help":"Elements should not have tabindex greater than zero"},"table-duplicate-name":{"description":"Ensure that tables do not have the same summary and caption","help":"The <caption> element should not contain the same text as the summary attribute"},"table-fake-caption":{"description":"Ensure that tables with a caption use the <caption> element.","help":"Data or header cells should not be used to give caption to a data table."},"td-has-header":{"description":"Ensure that each non-empty data cell in a large table has one or more table headers","help":"All non-empty td element in table larger than 3 by 3 must have an associated table header"},"td-headers-attr":{"description":"Ensure that each cell in a table using the headers refers to another cell in that table","help":"All cells in a table element that use the headers attribute must only refer to other cells of that same table"},"th-has-data-cells":{"description":"Ensure that each table header in a data table refers to data cells","help":"All th element and elements with role=columnheader/rowheader must data cells which it describes"},"valid-lang":{"description":"Ensures lang attributes have valid values","help":"lang attribute must have a valid value"},"video-caption":{"description":"Ensures <video> elements have captions","help":"<video> elements must have captions"},"video-description":{"description":"Ensures <video> elements have audio descriptions","help":"<video> elements must have an audio description track"}},"checks":{"accesskeys":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Accesskey attribute value is unique';return out;},"fail":function anonymous(it/**/){var out='Document has multiple elements with the same accesskey';return out;}}},"non-empty-alt":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Element has a non-empty alt attribute';return out;},"fail":function anonymous(it/**/){var out='Element has no alt attribute or the alt attribute is empty';return out;}}},"non-empty-title":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Element has a title attribute';return out;},"fail":function anonymous(it/**/){var out='Element has no title attribute or the title attribute is empty';return out;}}},"aria-label":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='aria-label attribute exists and is not empty';return out;},"fail":function anonymous(it/**/){var out='aria-label attribute does not exist or is empty';return out;}}},"aria-labelledby":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='aria-labelledby attribute exists and references elements that are visible to screen readers';return out;},"fail":function anonymous(it/**/){var out='aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty or not visible';return out;}}},"aria-allowed-attr":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='ARIA attributes are used correctly for the defined role';return out;},"fail":function anonymous(it/**/){var out='ARIA attribute'+(it.data&&it.data.length>1?'s are':' is')+' not allowed:';var arr1=it.data;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+=' '+value;}}return out;}}},"aria-required-attr":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='All required ARIA attributes are present';return out;},"fail":function anonymous(it/**/){var out='Required ARIA attribute'+(it.data&&it.data.length>1?'s':'')+' not present:';var arr1=it.data;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+=' '+value;}}return out;}}},"aria-required-children":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Required ARIA children are present';return out;},"fail":function anonymous(it/**/){var out='Required ARIA '+(it.data&&it.data.length>1?'children':'child')+' role not present:';var arr1=it.data;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+=' '+value;}}return out;}}},"aria-required-parent":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Required ARIA parent role present';return out;},"fail":function anonymous(it/**/){var out='Required ARIA parent'+(it.data&&it.data.length>1?'s':'')+' role not present:';var arr1=it.data;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+=' '+value;}}return out;}}},"invalidrole":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='ARIA role is valid';return out;},"fail":function anonymous(it/**/){var out='Role must be one of the valid ARIA roles';return out;}}},"abstractrole":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Abstract roles are not used';return out;},"fail":function anonymous(it/**/){var out='Abstract roles cannot be directly used';return out;}}},"aria-valid-attr-value":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='ARIA attribute values are valid';return out;},"fail":function anonymous(it/**/){var out='Invalid ARIA attribute value'+(it.data&&it.data.length>1?'s':'')+':';var arr1=it.data;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+=' '+value;}}return out;}}},"aria-valid-attr":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='ARIA attribute name'+(it.data&&it.data.length>1?'s':'')+' are valid';return out;},"fail":function anonymous(it/**/){var out='Invalid ARIA attribute name'+(it.data&&it.data.length>1?'s':'')+':';var arr1=it.data;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+=' '+value;}}return out;}}},"caption":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='The multimedia element has a captions track';return out;},"fail":function anonymous(it/**/){var out='The multimedia element does not have a captions track';return out;}}},"is-on-screen":{"impact":"minor","messages":{"pass":function anonymous(it/**/){var out='Element is not visible';return out;},"fail":function anonymous(it/**/){var out='Element is visible';return out;}}},"non-empty-if-present":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Element ';if(it.data){out+='has a non-empty value attribute';}else{out+='does not have a value attribute';}return out;},"fail":function anonymous(it/**/){var out='Element has a value attribute and the value attribute is empty';return out;}}},"non-empty-value":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Element has a non-empty value attribute';return out;},"fail":function anonymous(it/**/){var out='Element has no value attribute or the value attribute is empty';return out;}}},"button-has-visible-text":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Element has inner text that is visible to screen readers';return out;},"fail":function anonymous(it/**/){var out='Element does not have inner text that is visible to screen readers';return out;}}},"role-presentation":{"impact":"moderate","messages":{"pass":function anonymous(it/**/){var out='Element\'s default semantics were overriden with role="presentation"';return out;},"fail":function anonymous(it/**/){var out='Element\'s default semantics were not overridden with role="presentation"';return out;}}},"role-none":{"impact":"moderate","messages":{"pass":function anonymous(it/**/){var out='Element\'s default semantics were overriden with role="none"';return out;},"fail":function anonymous(it/**/){var out='Element\'s default semantics were not overridden with role="none"';return out;}}},"focusable-no-name":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Element is not in tab order or has accessible text';return out;},"fail":function anonymous(it/**/){var out='Element is in tab order and does not have accessible text';return out;}}},"internal-link-present":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Valid skip link found';return out;},"fail":function anonymous(it/**/){var out='No valid skip link found';return out;}}},"header-present":{"impact":"moderate","messages":{"pass":function anonymous(it/**/){var out='Page has a header';return out;},"fail":function anonymous(it/**/){var out='Page does not have a header';return out;}}},"landmark":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Page has a landmark region';return out;},"fail":function anonymous(it/**/){var out='Page does not have a landmark region';return out;}}},"group-labelledby":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='All elements with the name "'+it.data.name+'" reference the same element with aria-labelledby';return out;},"fail":function anonymous(it/**/){var out='All elements with the name "'+it.data.name+'" do not reference the same element with aria-labelledby';return out;}}},"fieldset":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Element is contained in a fieldset';return out;},"fail":function anonymous(it/**/){var out='';var code=it.data&&it.data.failureCode;if(code==='no-legend'){out+='Fieldset does not have a legend as its first child';}else if(code==='empty-legend'){out+='Legend does not have text that is visible to screen readers';}else if(code==='mixed-inputs'){out+='Fieldset contains unrelated inputs';}else if(code==='no-group-label'){out+='ARIA group does not have aria-label or aria-labelledby';}else if(code==='group-mixed-inputs'){out+='ARIA group contains unrelated inputs';}else{out+='Element does not have a containing fieldset or ARIA group';}return out;}}},"color-contrast":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='';if(it.data&&it.data.contrastRatio){out+='Element has sufficient color contrast of '+it.data.contrastRatio;}else{out+='Unable to determine contrast ratio';}return out;},"fail":function anonymous(it/**/){var out='Element has insufficient color contrast of '+it.data.contrastRatio+' (foreground color: '+it.data.fgColor+', background color: '+it.data.bgColor+', font size: '+it.data.fontSize+', font weight: '+it.data.fontWeight+')';return out;}}},"structured-dlitems":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='When not empty, element has both <dt> and <dd> elements';return out;},"fail":function anonymous(it/**/){var out='When not empty, element does not have at least one <dt> element followed by at least one <dd> element';return out;}}},"only-dlitems":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='List element only has direct children that are allowed inside <dt> or <dd> elements';return out;},"fail":function anonymous(it/**/){var out='List element has direct children that are not allowed inside <dt> or <dd> elements';return out;}}},"dlitem":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Description list item has a <dl> parent element';return out;},"fail":function anonymous(it/**/){var out='Description list item does not have a <dl> parent element';return out;}}},"doc-has-title":{"impact":"moderate","messages":{"pass":function anonymous(it/**/){var out='Document has a non-empty <title> element';return out;},"fail":function anonymous(it/**/){var out='Document does not have a non-empty <title> element';return out;}}},"duplicate-id":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Document has no elements that share the same id attribute';return out;},"fail":function anonymous(it/**/){var out='Document has multiple elements with the same id attribute: '+it.data;return out;}}},"has-visible-text":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Element has text that is visible to screen readers';return out;},"fail":function anonymous(it/**/){var out='Element does not have text that is visible to screen readers';return out;}}},"unique-frame-title":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Element\'s title attribute is unique';return out;},"fail":function anonymous(it/**/){var out='Element\'s title attribute is not unique';return out;}}},"heading-order":{"impact":"minor","messages":{"pass":function anonymous(it/**/){var out='Heading order valid';return out;},"fail":function anonymous(it/**/){var out='Heading order invalid';return out;}}},"has-lang":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='The <html> element has a lang attribute';return out;},"fail":function anonymous(it/**/){var out='The <html> element does not have a lang attribute';return out;}}},"valid-lang":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Value of lang attribute is included in the list of valid languages';return out;},"fail":function anonymous(it/**/){var out='Value of lang attribute not included in the list of valid languages';return out;}}},"has-alt":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Element has an alt attribute';return out;},"fail":function anonymous(it/**/){var out='Element does not have an alt attribute';return out;}}},"duplicate-img-label":{"impact":"minor","messages":{"pass":function anonymous(it/**/){var out='Element does not duplicate existing text in <img> alt text';return out;},"fail":function anonymous(it/**/){var out='Element contains <img> element with alt text that duplicates existing text';return out;}}},"title-only":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Form element does not solely use title attribute for its label';return out;},"fail":function anonymous(it/**/){var out='Only title used to generate label for form element';return out;}}},"implicit-label":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Form element has an implicit (wrapped) <label>';return out;},"fail":function anonymous(it/**/){var out='Form element does not have an implicit (wrapped) <label>';return out;}}},"explicit-label":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Form element has an explicit <label>';return out;},"fail":function anonymous(it/**/){var out='Form element does not have an explicit <label>';return out;}}},"help-same-as-label":{"impact":"minor","messages":{"pass":function anonymous(it/**/){var out='Help text (title or aria-describedby) does not duplicate label text';return out;},"fail":function anonymous(it/**/){var out='Help text (title or aria-describedby) text is the same as the label text';return out;}}},"multiple-label":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Form element does not have multiple <label> elements';return out;},"fail":function anonymous(it/**/){var out='Form element has multiple <label> elements';return out;}}},"has-th":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Layout table does not use <th> elements';return out;},"fail":function anonymous(it/**/){var out='Layout table uses <th> elements';return out;}}},"has-caption":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Layout table does not use <caption> element';return out;},"fail":function anonymous(it/**/){var out='Layout table uses <caption> element';return out;}}},"has-summary":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Layout table does not use summary attribute';return out;},"fail":function anonymous(it/**/){var out='Layout table uses summary attribute';return out;}}},"link-in-text-block":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Links can be distinguished from surrounding text in a way that does not rely on color';return out;},"fail":function anonymous(it/**/){var out='Links can not be distinguished from surrounding text in a way that does not rely on color';return out;}}},"only-listitems":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='List element only has direct children that are allowed inside <li> elements';return out;},"fail":function anonymous(it/**/){var out='List element has direct children that are not allowed inside <li> elements';return out;}}},"listitem":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='List item has a <ul>, <ol> or role="list" parent element';return out;},"fail":function anonymous(it/**/){var out='List item does not have a <ul>, <ol> or role="list" parent element';return out;}}},"meta-refresh":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='<meta> tag does not immediately refresh the page';return out;},"fail":function anonymous(it/**/){var out='<meta> tag forces timed refresh of page';return out;}}},"meta-viewport-large":{"impact":"minor","messages":{"pass":function anonymous(it/**/){var out='<meta> tag does not prevent significant zooming';return out;},"fail":function anonymous(it/**/){var out='<meta> tag limits zooming';return out;}}},"meta-viewport":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='<meta> tag does not disable zooming';return out;},"fail":function anonymous(it/**/){var out='<meta> tag disables zooming';return out;}}},"region":{"impact":"moderate","messages":{"pass":function anonymous(it/**/){var out='Content contained by ARIA landmark';return out;},"fail":function anonymous(it/**/){var out='Content not contained by an ARIA landmark';return out;}}},"html5-scope":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Scope attribute is only used on table header elements (<th>)';return out;},"fail":function anonymous(it/**/){var out='In HTML 5, scope attributes may only be used on table header elements (<th>)';return out;}}},"scope-value":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Scope attribute is used correctly';return out;},"fail":function anonymous(it/**/){var out='The value of the scope attribute may only be \'row\' or \'col\'';return out;}}},"exists":{"impact":"minor","messages":{"pass":function anonymous(it/**/){var out='Element does not exist';return out;},"fail":function anonymous(it/**/){var out='Element exists';return out;}}},"skip-link":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='Valid skip link found';return out;},"fail":function anonymous(it/**/){var out='No valid skip link found';return out;}}},"tabindex":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='Element does not have a tabindex greater than 0';return out;},"fail":function anonymous(it/**/){var out='Element has a tabindex greater than 0';return out;}}},"same-caption-summary":{"impact":"moderate","messages":{"pass":function anonymous(it/**/){var out='Content of summary attribute and <caption> are not duplicated';return out;},"fail":function anonymous(it/**/){var out='Content of summary attribute and <caption> element are identical';return out;}}},"caption-faked":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='The first row of a table is not used as a caption';return out;},"fail":function anonymous(it/**/){var out='The first row of the table should be a caption instead of a table cell';return out;}}},"td-has-header":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='All non-empty data cells have table headers';return out;},"fail":function anonymous(it/**/){var out='Some non-empty data cells do not have table headers';return out;}}},"td-headers-attr":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='The headers attribute is exclusively used to refer to other cells in the table';return out;},"fail":function anonymous(it/**/){var out='The headers attribute is not exclusively used to refer to other cells in the table';return out;}}},"th-has-data-cells":{"impact":"critical","messages":{"pass":function anonymous(it/**/){var out='All table header cells refer to data cells';return out;},"fail":function anonymous(it/**/){var out='Not all table header cells refer to data cells';return out;}}},"description":{"impact":"serious","messages":{"pass":function anonymous(it/**/){var out='The multimedia element has an audio description track';return out;},"fail":function anonymous(it/**/){var out='The multimedia element does not have an audio description track';return out;}}}},"failureSummaries":{"any":{"failureMessage":function anonymous(it/**/){var out='Fix any of the following:';var arr1=it;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+='\n  '+value.split('\n').join('\n  ');}}return out;}},"none":{"failureMessage":function anonymous(it/**/){var out='Fix all of the following:';var arr1=it;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+='\n  '+value.split('\n').join('\n  ');}}return out;}}}},"rules":[{"id":"accesskeys","selector":"[accesskey]","excludeHidden":false,"tags":["wcag2a","wcag211"],"all":[],"any":[],"none":["accesskeys"]},{"id":"area-alt","selector":"map area[href]","excludeHidden":false,"tags":["wcag2a","wcag111","section508","section508.22.a"],"all":[],"any":["non-empty-alt","non-empty-title","aria-label","aria-labelledby"],"none":[]},{"id":"aria-allowed-attr","tags":["wcag2a","wcag411","wcag412"],"all":[],"any":["aria-allowed-attr"],"none":[]},{"id":"aria-required-attr","selector":"[role]","tags":["wcag2a","wcag411","wcag412"],"all":[],"any":["aria-required-attr"],"none":[]},{"id":"aria-required-children","selector":"[role]","tags":["wcag2a","wcag131"],"all":[],"any":["aria-required-children"],"none":[]},{"id":"aria-required-parent","selector":"[role]","tags":["wcag2a","wcag131"],"all":[],"any":["aria-required-parent"],"none":[]},{"id":"aria-roles","selector":"[role]","tags":["wcag2a","wcag131","wcag411","wcag412"],"all":[],"any":[],"none":["invalidrole","abstractrole"]},{"id":"aria-valid-attr-value","tags":["wcag2a","wcag131","wcag411","wcag412"],"all":[],"any":[{"options":[],"id":"aria-valid-attr-value"}],"none":[]},{"id":"aria-valid-attr","tags":["wcag2a","wcag411"],"all":[],"any":[{"options":[],"id":"aria-valid-attr"}],"none":[]},{"id":"audio-caption","selector":"audio","excludeHidden":false,"tags":["wcag2a","wcag122","section508","section508.22.a"],"all":[],"any":[],"none":["caption"]},{"id":"blink","selector":"blink","excludeHidden":false,"tags":["wcag2a","wcag222","section508","section508.22.j"],"all":[],"any":[],"none":["is-on-screen"]},{"id":"button-name","selector":"button, [role=\"button\"], input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]","tags":["wcag2a","wcag412","section508","section508.22.a"],"all":[],"any":["non-empty-if-present","non-empty-value","button-has-visible-text","aria-label","aria-labelledby","role-presentation","role-none"],"none":["focusable-no-name"]},{"id":"bypass","selector":"html","pageLevel":true,"matches":function matches(node){return!!node.querySelector('a[href]');},"tags":["wcag2a","wcag241","section508","section508.22.o"],"all":[],"any":["internal-link-present","header-present","landmark"],"none":[]},{"id":"checkboxgroup","selector":"input[type=checkbox][name]","tags":["best-practice"],"all":[],"any":["group-labelledby","fieldset"],"none":[]},{"id":"color-contrast","excludeHidden":false,"options":{"noScroll":false},"selector":"*","tags":["wcag2aa","wcag143"],"all":[],"any":["color-contrast"],"none":[]},{"id":"definition-list","selector":"dl:not([role])","tags":["wcag2a","wcag131"],"all":[],"any":[],"none":["structured-dlitems","only-dlitems"]},{"id":"dlitem","selector":"dd:not([role]), dt:not([role])","tags":["wcag2a","wcag131"],"all":[],"any":["dlitem"],"none":[]},{"id":"document-title","selector":"html","tags":["wcag2a","wcag242"],"all":[],"any":["doc-has-title"],"none":[]},{"id":"duplicate-id","selector":"[id]","excludeHidden":false,"tags":["wcag2a","wcag411"],"all":[],"any":["duplicate-id"],"none":[]},{"id":"empty-heading","selector":"h1, h2, h3, h4, h5, h6, [role=\"heading\"]","enabled":true,"tags":["best-practice"],"all":[],"any":["has-visible-text","role-presentation","role-none"],"none":[]},{"id":"frame-title","selector":"frame, iframe","tags":["wcag2a","wcag241","section508","section508.22.i"],"all":[],"any":["non-empty-title"],"none":["unique-frame-title"]},{"id":"heading-order","selector":"h1,h2,h3,h4,h5,h6,[role=heading]","enabled":false,"tags":["best-practice"],"all":[],"any":["heading-order"],"none":[]},{"id":"html-has-lang","selector":"html","tags":["wcag2a","wcag311"],"all":[],"any":["has-lang"],"none":[]},{"id":"html-lang-valid","selector":"html[lang]","tags":["wcag2a","wcag311"],"all":[],"any":[],"none":[{"options":["aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","in","io","is","it","iu","iw","ja","ji","jv","jw","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mo","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu"],"id":"valid-lang"}]},{"id":"image-alt","selector":"img","tags":["wcag2a","wcag111","section508","section508.22.a"],"all":[],"any":["has-alt","aria-label","aria-labelledby","non-empty-title","role-presentation","role-none"],"none":[]},{"id":"image-redundant-alt","selector":"button, [role=\"button\"], a[href], p, li, td, th","tags":["best-practice"],"all":[],"any":[],"none":["duplicate-img-label"]},{"id":"input-image-alt","selector":"input[type=\"image\"]","tags":["wcag2a","wcag111","section508","section508.22.a"],"all":[],"any":["non-empty-alt","aria-label","aria-labelledby","non-empty-title"],"none":[]},{"id":"label-title-only","selector":"input:not([type='hidden']):not([type='image']):not([type='button']):not([type='submit']):not([type='reset']), select, textarea","enabled":false,"tags":["best-practice"],"all":[],"any":[],"none":["title-only"]},{"id":"label","selector":"input:not([type='hidden']):not([type='image']):not([type='button']):not([type='submit']):not([type='reset']), select, textarea","tags":["wcag2a","wcag332","wcag131","section508","section508.22.n"],"all":[],"any":["aria-label","aria-labelledby","implicit-label","explicit-label","non-empty-title"],"none":["help-same-as-label","multiple-label"]},{"id":"layout-table","selector":"table","matches":function matches(node){return!axe.commons.table.isDataTable(node);},"tags":["wcag2a","wcag131"],"all":[],"any":[],"none":["has-th","has-caption","has-summary"]},{"id":"link-in-text-block","selector":"a[href]:not([role]), *[role=link]","matches":function matches(node){var text=axe.commons.text.sanitize(node.textContent);if(!text){return false;}if(!axe.commons.dom.isVisible(node,false)){return false;}return axe.commons.dom.isInTextBlock(node);},"excludeHidden":false,"enabled":false,"tags":["experimental","wcag2a","wcag141"],"all":["link-in-text-block"],"any":[],"none":[]},{"id":"link-name","selector":"a[href]:not([role=\"button\"]), [role=link][href]","tags":["wcag2a","wcag111","wcag412","section508","section508.22.a"],"all":[],"any":["has-visible-text","aria-label","aria-labelledby","role-presentation","role-none"],"none":["focusable-no-name"]},{"id":"list","selector":"ul:not([role]), ol:not([role])","tags":["wcag2a","wcag131"],"all":[],"any":[],"none":["only-listitems"]},{"id":"listitem","selector":"li:not([role])","tags":["wcag2a","wcag131"],"all":[],"any":["listitem"],"none":[]},{"id":"marquee","selector":"marquee","excludeHidden":false,"tags":["wcag2a","wcag222"],"all":[],"any":[],"none":["is-on-screen"]},{"id":"meta-refresh","selector":"meta[http-equiv=\"refresh\"]","excludeHidden":false,"tags":["wcag2a","wcag2aaa","wcag221","wcag224","wcag325"],"all":[],"any":["meta-refresh"],"none":[]},{"id":"meta-viewport-large","selector":"meta[name=\"viewport\"]","excludeHidden":false,"tags":["best-practice"],"all":[],"any":[{"options":{"scaleMinimum":5,"lowerBound":2},"id":"meta-viewport-large"}],"none":[]},{"id":"meta-viewport","selector":"meta[name=\"viewport\"]","excludeHidden":false,"tags":["wcag2aa","wcag144"],"all":[],"any":[{"options":{"scaleMinimum":2},"id":"meta-viewport"}],"none":[]},{"id":"object-alt","selector":"object","tags":["wcag2a","wcag111","section508","section508.22.a"],"all":[],"any":["has-visible-text","aria-label","aria-labelledby","non-empty-title"],"none":[]},{"id":"radiogroup","selector":"input[type=radio][name]","tags":["best-practice"],"all":[],"any":["group-labelledby","fieldset"],"none":[]},{"id":"region","selector":"html","pageLevel":true,"enabled":false,"tags":["best-practice"],"all":[],"any":["region"],"none":[]},{"id":"scope-attr-valid","selector":"td[scope], th[scope]","enabled":true,"tags":["best-practice"],"all":["html5-scope","scope-value"],"any":[],"none":[]},{"id":"server-side-image-map","selector":"img[ismap]","tags":["wcag2a","wcag211","section508","section508.22.f"],"all":[],"any":[],"none":["exists"]},{"id":"skip-link","selector":"a[href]","pageLevel":true,"enabled":false,"tags":["best-practice"],"all":[],"any":["skip-link"],"none":[]},{"id":"tabindex","selector":"[tabindex]","tags":["best-practice"],"all":[],"any":["tabindex"],"none":[]},{"id":"table-duplicate-name","selector":"table","tags":["best-practice"],"all":[],"any":[],"none":["same-caption-summary"]},{"id":"table-fake-caption","selector":"table","matches":function matches(node){return axe.commons.table.isDataTable(node);},"tags":["experimental","wcag2a","wcag131","section508","section508.22.g"],"all":["caption-faked"],"any":[],"none":[]},{"id":"td-has-header","selector":"table","matches":function matches(node){if(axe.commons.table.isDataTable(node)){var tableArray=axe.commons.table.toArray(node);return tableArray.length>=3&&tableArray[0].length>=3&&tableArray[1].length>=3&&tableArray[2].length>=3;}return false;},"tags":["experimental","wcag2a","wcag131","section508","section508.22.g"],"all":["td-has-header"],"any":[],"none":[]},{"id":"td-headers-attr","selector":"table","tags":["wcag2a","wcag131","section508","section508.22.g"],"all":["td-headers-attr"],"any":[],"none":[]},{"id":"th-has-data-cells","selector":"table","matches":function matches(node){return axe.commons.table.isDataTable(node);},"tags":["wcag2a","wcag131","section508","section508.22.g"],"all":["th-has-data-cells"],"any":[],"none":[]},{"id":"valid-lang","selector":"[lang]:not(html), [xml\\:lang]:not(html)","tags":["wcag2aa","wcag312"],"all":[],"any":[],"none":[{"options":["aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","in","io","is","it","iu","iw","ja","ji","jv","jw","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mo","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu"],"id":"valid-lang"}]},{"id":"video-caption","selector":"video","excludeHidden":false,"tags":["wcag2a","wcag122","wcag123","section508","section508.22.a"],"all":[],"any":[],"none":["caption"]},{"id":"video-description","selector":"video","excludeHidden":false,"tags":["wcag2aa","wcag125","section508","section508.22.b"],"all":[],"any":[],"none":["description"]}],"checks":[{"id":"abstractrole","evaluate":function evaluate(node,options){return axe.commons.aria.getRoleType(node.getAttribute('role'))==='abstract';}},{"id":"aria-allowed-attr","matches":function matches(node){var role=node.getAttribute('role');if(!role){role=axe.commons.aria.implicitRole(node);}var allowed=axe.commons.aria.allowedAttr(role);if(role&&allowed){var aria=/^aria-/;if(node.hasAttributes()){var attrs=node.attributes;for(var i=0,l=attrs.length;i<l;i++){if(aria.test(attrs[i].name)){return true;}}}}return false;},"evaluate":function evaluate(node,options){var invalid=[];var attr,attrName,allowed,role=node.getAttribute('role'),attrs=node.attributes;if(!role){role=axe.commons.aria.implicitRole(node);}allowed=axe.commons.aria.allowedAttr(role);if(role&&allowed){for(var i=0,l=attrs.length;i<l;i++){attr=attrs[i];attrName=attr.name;if(axe.commons.aria.validateAttr(attrName)&&allowed.indexOf(attrName)===-1){invalid.push(attrName+'="'+attr.nodeValue+'"');}}}if(invalid.length){this.data(invalid);return false;}return true;}},{"id":"invalidrole","evaluate":function evaluate(node,options){return!axe.commons.aria.isValidRole(node.getAttribute('role'));}},{"id":"aria-required-attr","evaluate":function evaluate(node,options){var missing=[];if(node.hasAttributes()){var attr,role=node.getAttribute('role'),required=axe.commons.aria.requiredAttr(role);if(role&&required){for(var i=0,l=required.length;i<l;i++){attr=required[i];if(!node.getAttribute(attr)){missing.push(attr);}}}}if(missing.length){this.data(missing);return false;}return true;}},{"id":"aria-required-children","evaluate":function evaluate(node,options){var requiredOwned=axe.commons.aria.requiredOwned,implicitNodes=axe.commons.aria.implicitNodes,matchesSelector=axe.commons.utils.matchesSelector,idrefs=axe.commons.dom.idrefs;function owns(node,role,ariaOwned){if(node===null){return false;}var implicit=implicitNodes(role),selector=['[role="'+role+'"]'];if(implicit){selector=selector.concat(implicit);}selector=selector.join(',');return ariaOwned?matchesSelector(node,selector)||!!node.querySelector(selector):!!node.querySelector(selector);}function ariaOwns(nodes,role){var index,length;for(index=0,length=nodes.length;index<length;index++){if(nodes[index]===null){continue;}if(owns(nodes[index],role,true)){return true;}}return false;}function missingRequiredChildren(node,childRoles,all){var i,l=childRoles.length,missing=[],ownedElements=idrefs(node,'aria-owns');for(i=0;i<l;i++){var r=childRoles[i];if(owns(node,r)||ariaOwns(ownedElements,r)){if(!all){return null;}}else{if(all){missing.push(r);}}}if(missing.length){return missing;}if(!all&&childRoles.length){return childRoles;}return null;}var role=node.getAttribute('role');var required=requiredOwned(role);if(!required){return true;}var all=false;var childRoles=required.one;if(!childRoles){var all=true;childRoles=required.all;}var missing=missingRequiredChildren(node,childRoles,all);if(!missing){return true;}this.data(missing);return false;}},{"id":"aria-required-parent","evaluate":function evaluate(node,options){function getSelector(role){var impliedNative=axe.commons.aria.implicitNodes(role)||[];return impliedNative.concat('[role="'+role+'"]').join(',');}function getMissingContext(element,requiredContext,includeElement){var index,length,role=element.getAttribute('role'),missing=[];if(!requiredContext){requiredContext=axe.commons.aria.requiredContext(role);}if(!requiredContext){return null;}for(index=0,length=requiredContext.length;index<length;index++){if(includeElement&&axe.utils.matchesSelector(element,getSelector(requiredContext[index]))){return null;}if(axe.commons.dom.findUp(element,getSelector(requiredContext[index]))){//if one matches, it passes
return null;}else{missing.push(requiredContext[index]);}}return missing;}function getAriaOwners(element){var owners=[],o=null;while(element){if(element.id){o=document.querySelector('[aria-owns~='+axe.commons.utils.escapeSelector(element.id)+']');if(o){owners.push(o);}}element=element.parentNode;}return owners.length?owners:null;}var missingParents=getMissingContext(node);if(!missingParents){return true;}var owners=getAriaOwners(node);if(owners){for(var i=0,l=owners.length;i<l;i++){missingParents=getMissingContext(owners[i],missingParents,true);if(!missingParents){return true;}}}this.data(missingParents);return false;}},{"id":"aria-valid-attr-value","matches":function matches(node){var aria=/^aria-/;if(node.hasAttributes()){var attrs=node.attributes;for(var i=0,l=attrs.length;i<l;i++){if(aria.test(attrs[i].name)){return true;}}}return false;},"evaluate":function evaluate(node,options){options=Array.isArray(options)?options:[];var invalid=[],aria=/^aria-/;var attr,attrName,attrs=node.attributes;for(var i=0,l=attrs.length;i<l;i++){attr=attrs[i];attrName=attr.name;if(options.indexOf(attrName)===-1&&aria.test(attrName)&&!axe.commons.aria.validateAttrValue(node,attrName)){invalid.push(attrName+'="'+attr.nodeValue+'"');}}if(invalid.length){this.data(invalid);return false;}return true;},"options":[]},{"id":"aria-valid-attr","matches":function matches(node){var aria=/^aria-/;if(node.hasAttributes()){var attrs=node.attributes;for(var i=0,l=attrs.length;i<l;i++){if(aria.test(attrs[i].name)){return true;}}}return false;},"evaluate":function evaluate(node,options){options=Array.isArray(options)?options:[];var invalid=[],aria=/^aria-/;var attr,attrs=node.attributes;for(var i=0,l=attrs.length;i<l;i++){attr=attrs[i].name;if(options.indexOf(attr)===-1&&aria.test(attr)&&!axe.commons.aria.validateAttr(attr)){invalid.push(attr);}}if(invalid.length){this.data(invalid);return false;}return true;},"options":[]},{"id":"color-contrast","matches":function matches(node){var nodeName=node.nodeName.toUpperCase(),nodeType=node.type,doc=document;if(node.getAttribute('aria-disabled')==='true'){return false;}if(nodeName==='INPUT'){return['hidden','range','color','checkbox','radio','image'].indexOf(nodeType)===-1&&!node.disabled;}if(nodeName==='SELECT'){return!!node.options.length&&!node.disabled;}if(nodeName==='TEXTAREA'){return!node.disabled;}if(nodeName==='OPTION'){return false;}if(nodeName==='BUTTON'&&node.disabled){return false;}// check if the element is a label for a disabled control
if(nodeName==='LABEL'){// explicit label of disabled input
var candidate=node.htmlFor&&doc.getElementById(node.htmlFor);if(candidate&&candidate.disabled){return false;}var candidate=node.querySelector('input:not([type="hidden"]):not([type="image"])'+':not([type="button"]):not([type="submit"]):not([type="reset"]), select, textarea');if(candidate&&candidate.disabled){return false;}}// label of disabled control associated w/ aria-labelledby
if(node.id){var candidate=doc.querySelector('[aria-labelledby~='+axe.commons.utils.escapeSelector(node.id)+']');if(candidate&&candidate.disabled){return false;}}if(axe.commons.text.visible(node,false,true)===''){return false;}var range=document.createRange(),childNodes=node.childNodes,length=childNodes.length,child,index;for(index=0;index<length;index++){child=childNodes[index];if(child.nodeType===3&&axe.commons.text.sanitize(child.nodeValue)!==''){range.selectNodeContents(child);}}var rects=range.getClientRects();length=rects.length;for(index=0;index<length;index++){//check to see if the rectangle impinges
if(axe.commons.dom.visuallyOverlaps(rects[index],node)){return true;}}return false;},"evaluate":function evaluate(node,options){if(!axe.commons.dom.isVisible(node,false)){return true;}var noScroll=!!(options||{}).noScroll;var bgNodes=[],bgColor=axe.commons.color.getBackgroundColor(node,bgNodes,noScroll),fgColor=axe.commons.color.getForegroundColor(node,noScroll);//We don't know, so we'll pass it provisionally
if(fgColor===null||bgColor===null){return true;}var nodeStyle=window.getComputedStyle(node);var fontSize=parseFloat(nodeStyle.getPropertyValue('font-size'));var fontWeight=nodeStyle.getPropertyValue('font-weight');var bold=['bold','bolder','600','700','800','900'].indexOf(fontWeight)!==-1;var cr=axe.commons.color.hasValidContrastRatio(bgColor,fgColor,fontSize,bold);this.data({fgColor:fgColor.toHexString(),bgColor:bgColor.toHexString(),contrastRatio:cr.contrastRatio.toFixed(2),fontSize:(fontSize*72/96).toFixed(1)+'pt',fontWeight:bold?'bold':'normal'});if(!cr.isValid){this.relatedNodes(bgNodes);}return cr.isValid;}},{"id":"link-in-text-block","evaluate":function evaluate(node,options){/* global axe*/var color=axe.commons.color;function getContrast(color1,color2){var c1lum=color1.getRelativeLuminance();var c2lum=color2.getRelativeLuminance();return(Math.max(c1lum,c2lum)+0.05)/(Math.min(c1lum,c2lum)+0.05);}var blockLike=['block','list-item','table','flex','grid','inline-block'];function isBlock(elm){var display=window.getComputedStyle(elm).getPropertyValue('display');return blockLike.indexOf(display)!==-1||display.substr(0,6)==='table-';}if(isBlock(node)){return false;}var parentBlock=node.parentNode;while(parentBlock.nodeType===1&&!isBlock(parentBlock)){parentBlock=parentBlock.parentNode;}// TODO: Check the :visited state of the link
if(color.elementIsDistinct(node,parentBlock)){return true;}else{// Check if contrast of foreground is sufficient
var nodeColor,parentColor;nodeColor=color.getForegroundColor(node);parentColor=color.getForegroundColor(parentBlock);if(!nodeColor||!parentColor||getContrast(nodeColor,parentColor)>=3.0){return true;}// Check if contrast of background is sufficient
nodeColor=color.getBackgroundColor(node);parentColor=color.getBackgroundColor(parentBlock);if(!nodeColor||!parentColor||getContrast(nodeColor,parentColor)>=3.0){return true;}}// TODO: We should check the focus / hover style too
return false;}},{"id":"fieldset","evaluate":function evaluate(node,options){var failureCode,self=this;function getUnrelatedElements(parent,name){return axe.commons.utils.toArray(parent.querySelectorAll('select,textarea,button,input:not([name="'+name+'"]):not([type="hidden"])'));}function checkFieldset(group,name){var firstNode=group.firstElementChild;if(!firstNode||firstNode.nodeName.toUpperCase()!=='LEGEND'){self.relatedNodes([group]);failureCode='no-legend';return false;}if(!axe.commons.text.accessibleText(firstNode)){self.relatedNodes([firstNode]);failureCode='empty-legend';return false;}var otherElements=getUnrelatedElements(group,name);if(otherElements.length){self.relatedNodes(otherElements);failureCode='mixed-inputs';return false;}return true;}function checkARIAGroup(group,name){var hasLabelledByText=axe.commons.dom.idrefs(group,'aria-labelledby').some(function(element){return element&&axe.commons.text.accessibleText(element);});var ariaLabel=group.getAttribute('aria-label');if(!hasLabelledByText&&!(ariaLabel&&axe.commons.text.sanitize(ariaLabel))){self.relatedNodes(group);failureCode='no-group-label';return false;}var otherElements=getUnrelatedElements(group,name);if(otherElements.length){self.relatedNodes(otherElements);failureCode='group-mixed-inputs';return false;}return true;}function spliceCurrentNode(nodes,current){return axe.commons.utils.toArray(nodes).filter(function(candidate){return candidate!==current;});}function runCheck(element){var name=axe.commons.utils.escapeSelector(node.name);var matchingNodes=document.querySelectorAll('input[type="'+axe.commons.utils.escapeSelector(node.type)+'"][name="'+name+'"]');if(matchingNodes.length<2){return true;}var fieldset=axe.commons.dom.findUp(element,'fieldset');var group=axe.commons.dom.findUp(element,'[role="group"]'+(node.type==='radio'?',[role="radiogroup"]':''));if(!group&&!fieldset){failureCode='no-group';self.relatedNodes(spliceCurrentNode(matchingNodes,element));return false;}return fieldset?checkFieldset(fieldset,name):checkARIAGroup(group,name);}var data={name:node.getAttribute('name'),type:node.getAttribute('type')};var result=runCheck(node);if(!result){data.failureCode=failureCode;}this.data(data);return result;},"after":function after(results,options){var seen={};return results.filter(function(result){// passes can pass through
if(result.result){return true;}var data=result.data;if(data){seen[data.type]=seen[data.type]||{};if(!seen[data.type][data.name]){seen[data.type][data.name]=[data];return true;}var hasBeenSeen=seen[data.type][data.name].some(function(candidate){return candidate.failureCode===data.failureCode;});if(!hasBeenSeen){seen[data.type][data.name].push(data);}return!hasBeenSeen;}return false;});}},{"id":"group-labelledby","evaluate":function evaluate(node,options){this.data({name:node.getAttribute('name'),type:node.getAttribute('type')});var matchingNodes=document.querySelectorAll('input[type="'+axe.commons.utils.escapeSelector(node.type)+'"][name="'+axe.commons.utils.escapeSelector(node.name)+'"]');if(matchingNodes.length<=1){return true;}// Check to see if there's an aria-labelledby value that all nodes have in common
return[].map.call(matchingNodes,function(m){var l=m.getAttribute('aria-labelledby');return l?l.split(/\s+/):[];}).reduce(function(prev,curr){return prev.filter(function(n){return curr.indexOf(n)!==-1;});}).filter(function(n){var labelNode=document.getElementById(n);return labelNode&&axe.commons.text.accessibleText(labelNode);}).length!==0;},"after":function after(results,options){var seen={};return results.filter(function(result){var data=result.data;if(data){seen[data.type]=seen[data.type]||{};if(!seen[data.type][data.name]){seen[data.type][data.name]=true;return true;}}return false;});}},{"id":"accesskeys","evaluate":function evaluate(node,options){if(axe.commons.dom.isVisible(node,false)){this.data(node.getAttribute('accesskey'));this.relatedNodes([node]);}return true;},"after":function after(results,options){var seen={};return results.filter(function(r){if(!r.data){return false;}var key=r.data.toUpperCase();if(!seen[key]){seen[key]=r;r.relatedNodes=[];return true;}seen[key].relatedNodes.push(r.relatedNodes[0]);return false;}).map(function(r){r.result=!!r.relatedNodes.length;return r;});}},{"id":"focusable-no-name","evaluate":function evaluate(node,options){var tabIndex=node.getAttribute('tabindex'),isFocusable=axe.commons.dom.isFocusable(node)&&tabIndex>-1;if(!isFocusable){return false;}return!axe.commons.text.accessibleText(node);}},{"id":"tabindex","evaluate":function evaluate(node,options){return node.tabIndex<=0;}},{"id":"duplicate-img-label","evaluate":function evaluate(node,options){var imgs=node.querySelectorAll('img');var text=axe.commons.text.visible(node,true).toLowerCase();if(text===''){return false;}for(var i=0,len=imgs.length;i<len;i++){var img=imgs[i];var imgAlt=axe.commons.text.accessibleText(img).toLowerCase();if(imgAlt===text&&img.getAttribute('role')!=='presentation'&&axe.commons.dom.isVisible(img)){return true;}}return false;}},{"id":"explicit-label","evaluate":function evaluate(node,options){var label=document.querySelector('label[for="'+axe.commons.utils.escapeSelector(node.id)+'"]');if(label){return!!axe.commons.text.accessibleText(label);}return false;},"selector":"[id]"},{"id":"help-same-as-label","evaluate":function evaluate(node,options){var labelText=axe.commons.text.label(node),check=node.getAttribute('title');if(!labelText){return false;}if(!check){check='';if(node.getAttribute('aria-describedby')){var ref=axe.commons.dom.idrefs(node,'aria-describedby');check=ref.map(function(thing){return thing?axe.commons.text.accessibleText(thing):'';}).join('');}}return axe.commons.text.sanitize(check)===axe.commons.text.sanitize(labelText);},"enabled":false},{"id":"implicit-label","evaluate":function evaluate(node,options){var label=axe.commons.dom.findUp(node,'label');if(label){return!!axe.commons.text.accessibleText(label);}return false;}},{"id":"multiple-label","evaluate":function evaluate(node,options){var labels=[].slice.call(document.querySelectorAll('label[for="'+axe.commons.utils.escapeSelector(node.id)+'"]')),parent=node.parentNode;while(parent){if(parent.tagName==='LABEL'&&labels.indexOf(parent)===-1){labels.push(parent);}parent=parent.parentNode;}this.relatedNodes(labels);return labels.length>1;}},{"id":"title-only","evaluate":function evaluate(node,options){var labelText=axe.commons.text.label(node);return!labelText&&!!(node.getAttribute('title')||node.getAttribute('aria-describedby'));}},{"id":"has-lang","evaluate":function evaluate(node,options){return!!(node.getAttribute('lang')||node.getAttribute('xml:lang')||'').trim();}},{"id":"valid-lang","options":["aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","in","io","is","it","iu","iw","ja","ji","jv","jw","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mo","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu"],"evaluate":function evaluate(node,options){function getBaseLang(lang){return lang.trim().split('-')[0].toLowerCase();}var langs,invalid;langs=(options||[]).map(getBaseLang);invalid=['lang','xml:lang'].reduce(function(invalid,langAttr){var langVal=node.getAttribute(langAttr);if(typeof langVal!=='string'){return invalid;}var baselangVal=getBaseLang(langVal);// Edge sets lang to an empty string when xml:lang is set
// so we need to ignore empty strings here
if(baselangVal!==''&&langs.indexOf(baselangVal)===-1){invalid.push(langAttr+'="'+node.getAttribute(langAttr)+'"');}return invalid;},[]);if(invalid.length){this.data(invalid);return true;}return false;}},{"id":"dlitem","evaluate":function evaluate(node,options){return node.parentNode.tagName==='DL';}},{"id":"has-listitem","evaluate":function evaluate(node,options){var children=node.children;if(children.length===0){return true;}for(var i=0;i<children.length;i++){if(children[i].nodeName.toUpperCase()==='LI'){return false;}}return true;}},{"id":"listitem","evaluate":function evaluate(node,options){if(['UL','OL'].indexOf(node.parentNode.nodeName.toUpperCase())!==-1){return true;}return node.parentNode.getAttribute('role')==='list';}},{"id":"only-dlitems","evaluate":function evaluate(node,options){var child,nodeName,bad=[],children=node.childNodes,permitted=['STYLE','META','LINK','MAP','AREA','SCRIPT','DATALIST','TEMPLATE'],hasNonEmptyTextNode=false;for(var i=0;i<children.length;i++){child=children[i];var nodeName=child.nodeName.toUpperCase();if(child.nodeType===1&&nodeName!=='DT'&&nodeName!=='DD'&&permitted.indexOf(nodeName)===-1){bad.push(child);}else if(child.nodeType===3&&child.nodeValue.trim()!==''){hasNonEmptyTextNode=true;}}if(bad.length){this.relatedNodes(bad);}var retVal=!!bad.length||hasNonEmptyTextNode;return retVal;}},{"id":"only-listitems","evaluate":function evaluate(node,options){var child,nodeName,bad=[],children=node.childNodes,permitted=['STYLE','META','LINK','MAP','AREA','SCRIPT','DATALIST','TEMPLATE'],hasNonEmptyTextNode=false;for(var i=0;i<children.length;i++){child=children[i];nodeName=child.nodeName.toUpperCase();if(child.nodeType===1&&nodeName!=='LI'&&permitted.indexOf(nodeName)===-1){bad.push(child);}else if(child.nodeType===3&&child.nodeValue.trim()!==''){hasNonEmptyTextNode=true;}}if(bad.length){this.relatedNodes(bad);}return!!bad.length||hasNonEmptyTextNode;}},{"id":"structured-dlitems","evaluate":function evaluate(node,options){var children=node.children;if(!children||!children.length){return false;}var hasDt=false,hasDd=false,nodeName;for(var i=0;i<children.length;i++){nodeName=children[i].nodeName.toUpperCase();if(nodeName==='DT'){hasDt=true;}if(hasDt&&nodeName==='DD'){return false;}if(nodeName==='DD'){hasDd=true;}}return hasDt||hasDd;}},{"id":"caption","evaluate":function evaluate(node,options){return!node.querySelector('track[kind=captions]');}},{"id":"description","evaluate":function evaluate(node,options){return!node.querySelector('track[kind=descriptions]');}},{"id":"meta-viewport-large","evaluate":function evaluate(node,options){options=options||{};var params,content=node.getAttribute('content')||'',parsedParams=content.split(/[;,]/),result={},minimum=options.scaleMinimum||2,lowerBound=options.lowerBound||false;for(var i=0,l=parsedParams.length;i<l;i++){params=parsedParams[i].split('=');var key=params.shift().toLowerCase();if(key&&params.length){result[key.trim()]=params.shift().trim().toLowerCase();}}if(lowerBound&&result['maximum-scale']&&parseFloat(result['maximum-scale'])<lowerBound){return true;}if(!lowerBound&&result['user-scalable']==='no'){return false;}if(result['maximum-scale']&&parseFloat(result['maximum-scale'])<minimum){return false;}return true;},"options":{"scaleMinimum":5,"lowerBound":2}},{"id":"meta-viewport","evaluate":function evaluate(node,options){options=options||{};var params,content=node.getAttribute('content')||'',parsedParams=content.split(/[;,]/),result={},minimum=options.scaleMinimum||2,lowerBound=options.lowerBound||false;for(var i=0,l=parsedParams.length;i<l;i++){params=parsedParams[i].split('=');var key=params.shift().toLowerCase();if(key&&params.length){result[key.trim()]=params.shift().trim().toLowerCase();}}if(lowerBound&&result['maximum-scale']&&parseFloat(result['maximum-scale'])<lowerBound){return true;}if(!lowerBound&&result['user-scalable']==='no'){return false;}if(result['maximum-scale']&&parseFloat(result['maximum-scale'])<minimum){return false;}return true;},"options":{"scaleMinimum":2}},{"id":"header-present","selector":"html","evaluate":function evaluate(node,options){return!!node.querySelector('h1, h2, h3, h4, h5, h6, [role="heading"]');}},{"id":"heading-order","evaluate":function evaluate(node,options){var ariaHeadingLevel=node.getAttribute('aria-level');if(ariaHeadingLevel!==null){this.data(parseInt(ariaHeadingLevel,10));return true;}var headingLevel=node.tagName.match(/H(\d)/);if(headingLevel){this.data(parseInt(headingLevel[1],10));return true;}return true;},"after":function after(results,options){if(results.length<2){return results;}var prevLevel=results[0].data;for(var i=1;i<results.length;i++){if(results[i].result&&results[i].data>prevLevel+1){results[i].result=false;}prevLevel=results[i].data;}return results;}},{"id":"internal-link-present","selector":"html","evaluate":function evaluate(node,options){return!!node.querySelector('a[href^="#"]');}},{"id":"landmark","selector":"html","evaluate":function evaluate(node,options){return!!node.querySelector('[role="main"]');}},{"id":"meta-refresh","evaluate":function evaluate(node,options){var content=node.getAttribute('content')||'',parsedParams=content.split(/[;,]/);return content===''||parsedParams[0]==='0';}},{"id":"region","evaluate":function evaluate(node,options){//jshint latedef: false
var landmarkRoles=axe.commons.aria.getRolesByType('landmark'),firstLink=node.querySelector('a[href]');function isSkipLink(n){return firstLink&&axe.commons.dom.isFocusable(axe.commons.dom.getElementByReference(firstLink,'href'))&&firstLink===n;}function isLandmark(n){var role=n.getAttribute('role');return role&&landmarkRoles.indexOf(role)!==-1;}function checkRegion(n){if(isLandmark(n)){return null;}if(isSkipLink(n)){return getViolatingChildren(n);}if(axe.commons.dom.isVisible(n,true)&&(axe.commons.text.visible(n,true,true)||axe.commons.dom.isVisualContent(n))){return n;}return getViolatingChildren(n);}function getViolatingChildren(n){var children=axe.commons.utils.toArray(n.children);if(children.length===0){return[];}return children.map(checkRegion).filter(function(c){return c!==null;}).reduce(function(a,b){return a.concat(b);},[]);}var v=getViolatingChildren(node);this.relatedNodes(v);return!v.length;},"after":function after(results,options){return[results[0]];}},{"id":"skip-link","selector":"a[href]","evaluate":function evaluate(node,options){return axe.commons.dom.isFocusable(axe.commons.dom.getElementByReference(node,'href'));},"after":function after(results,options){return[results[0]];}},{"id":"unique-frame-title","evaluate":function evaluate(node,options){this.data(node.title);return true;},"after":function after(results,options){var titles={};results.forEach(function(r){titles[r.data]=titles[r.data]!==undefined?++titles[r.data]:0;});return results.filter(function(r){return!!titles[r.data];});}},{"id":"aria-label","evaluate":function evaluate(node,options){var label=node.getAttribute('aria-label');return!!(label?axe.commons.text.sanitize(label).trim():'');}},{"id":"aria-labelledby","evaluate":function evaluate(node,options){var results=axe.commons.dom.idrefs(node,'aria-labelledby');var element,i,l=results.length;for(i=0;i<l;i++){element=results[i];if(element&&axe.commons.text.accessibleText(element,true)){return true;}}return false;}},{"id":"button-has-visible-text","evaluate":function evaluate(node,options){return axe.commons.text.accessibleText(node).length>0;},"selector":"button, [role=\"button\"]:not(input)"},{"id":"doc-has-title","evaluate":function evaluate(node,options){var title=document.title;return!!(title?axe.commons.text.sanitize(title).trim():'');}},{"id":"duplicate-id","evaluate":function evaluate(node,options){// Since empty ID's are not meaningful and are ignored by Edge, we'll
// let those pass.
if(!node.id.trim()){return true;}var matchingNodes=document.querySelectorAll('[id="'+axe.commons.utils.escapeSelector(node.id)+'"]');var related=[];for(var i=0;i<matchingNodes.length;i++){if(matchingNodes[i]!==node){related.push(matchingNodes[i]);}}if(related.length){this.relatedNodes(related);}this.data(node.getAttribute('id'));return matchingNodes.length<=1;},"after":function after(results,options){var uniqueIds=[];return results.filter(function(r){if(uniqueIds.indexOf(r.data)===-1){uniqueIds.push(r.data);return true;}return false;});}},{"id":"exists","evaluate":function evaluate(node,options){return true;}},{"id":"has-alt","evaluate":function evaluate(node,options){return node.hasAttribute('alt');}},{"id":"has-visible-text","evaluate":function evaluate(node,options){return axe.commons.text.accessibleText(node).length>0;}},{"id":"is-on-screen","evaluate":function evaluate(node,options){// From a visual perspective
return axe.commons.dom.isVisible(node,false)&&!axe.commons.dom.isOffscreen(node);}},{"id":"non-empty-alt","evaluate":function evaluate(node,options){var label=node.getAttribute('alt');return!!(label?axe.commons.text.sanitize(label).trim():'');}},{"id":"non-empty-if-present","evaluate":function evaluate(node,options){var label=node.getAttribute('value');this.data(label);return label===null||axe.commons.text.sanitize(label).trim()!=='';},"selector":"[type=\"submit\"], [type=\"reset\"]"},{"id":"non-empty-title","evaluate":function evaluate(node,options){var title=node.getAttribute('title');return!!(title?axe.commons.text.sanitize(title).trim():'');}},{"id":"non-empty-value","evaluate":function evaluate(node,options){var label=node.getAttribute('value');return!!(label?axe.commons.text.sanitize(label).trim():'');},"selector":"[type=\"button\"]"},{"id":"role-none","evaluate":function evaluate(node,options){return node.getAttribute('role')==='none';}},{"id":"role-presentation","evaluate":function evaluate(node,options){return node.getAttribute('role')==='presentation';}},{"id":"caption-faked","evaluate":function evaluate(node,options){var table=axe.commons.table.toArray(node);var firstRow=table[0];if(table.length<=1||firstRow.length<=1||node.rows.length<=1){return true;}return firstRow.reduce(function(out,curr,i){return out||curr!==firstRow[i+1]&&firstRow[i+1]!==undefined;},false);}},{"id":"has-caption","evaluate":function evaluate(node,options){return!!node.caption;}},{"id":"has-summary","evaluate":function evaluate(node,options){return!!node.summary;}},{"id":"has-th","evaluate":function evaluate(node,options){var row,cell,badCells=[];for(var rowIndex=0,rowLength=node.rows.length;rowIndex<rowLength;rowIndex++){row=node.rows[rowIndex];for(var cellIndex=0,cellLength=row.cells.length;cellIndex<cellLength;cellIndex++){cell=row.cells[cellIndex];if(cell.nodeName.toUpperCase()==='TH'||['rowheader','columnheader'].indexOf(cell.getAttribute('role'))!==-1){badCells.push(cell);}}}if(badCells.length){this.relatedNodes(badCells);return true;}return false;}},{"id":"html5-scope","evaluate":function evaluate(node,options){if(!axe.commons.dom.isHTML5(document)){return false;}return node.nodeName.toUpperCase()==='TH';}},{"id":"same-caption-summary","selector":"table","evaluate":function evaluate(node,options){return!!(node.summary&&node.caption)&&node.summary===axe.commons.text.accessibleText(node.caption);}},{"id":"scope-value","evaluate":function evaluate(node,options){options=options||{};var value=node.getAttribute('scope').toLowerCase();var validVals=['row','col','rowgroup','colgroup']||options.values;return validVals.indexOf(value)!==-1;}},{"id":"td-has-header","evaluate":function evaluate(node,options){var row,cell,badCells=[];for(var rowIndex=0,rowLength=node.rows.length;rowIndex<rowLength;rowIndex++){row=node.rows[rowIndex];for(var cellIndex=0,cellLength=row.cells.length;cellIndex<cellLength;cellIndex++){cell=row.cells[cellIndex];if(cell.textContent.trim()!==''&&axe.commons.table.isDataCell(cell)&&!axe.commons.aria.label(cell)){var headers=axe.commons.table.getHeaders(cell).reduce(function(out,header){return out||header!==null&&!!header.textContent.trim();},false);if(!headers){badCells.push(cell);}}}}if(badCells.length){this.relatedNodes(badCells);return false;}return true;}},{"id":"td-headers-attr","evaluate":function evaluate(node,options){var cells=[];for(var rowIndex=0,rowLength=node.rows.length;rowIndex<rowLength;rowIndex++){var row=node.rows[rowIndex];for(var cellIndex=0,cellLength=row.cells.length;cellIndex<cellLength;cellIndex++){cells.push(row.cells[cellIndex]);}}var ids=cells.reduce(function(ids,cell){if(cell.id){ids.push(cell.id);}return ids;},[]);var badCells=cells.reduce(function(badCells,cell){var isSelf,notOfTable;// Get a list all the values of the headers attribute
var headers=(cell.getAttribute('headers')||'').split(/\s/).reduce(function(headers,header){header=header.trim();if(header){headers.push(header);}return headers;},[]);if(headers.length!==0){// Check if the cell's id is in this list
if(cell.id){isSelf=headers.indexOf(cell.id.trim())!==-1;}// Check if the headers are of cells inside the table
notOfTable=headers.reduce(function(fail,header){return fail||ids.indexOf(header)===-1;},false);if(isSelf||notOfTable){badCells.push(cell);}}return badCells;},[]);if(badCells.length>0){this.relatedNodes(badCells);return false;}else{return true;}}},{"id":"th-has-data-cells","evaluate":function evaluate(node,options){var cells=[];var checkResult=this;/**
 * Traverses a table in a given direction, passing it to the callback
 * @param  {array}    table    A matrix of the table obtained using axe.commons.table.toArray
 * @param  {object}   start    x/y coordinate: {x: 0, y: 0};
 * @param  {object}   dir      Direction that will be added recursively {x: 1, y: 0};
 * @param  {Function} callback Function to which each cell will be passed
 * @return {nodeElemtn}        If the callback returns true, the traversal will end and the cell will be returned
 */function traverseTable(table,dir,start,callback){'use strict';if(typeof start==='function'){callback=start;start={x:0,y:0};}if(typeof dir==='string'){switch(dir){case'left':dir={x:-1,y:0};break;case'up':dir={x:0,y:-1};break;case'right':dir={x:1,y:0};break;case'down':dir={x:0,y:1};break;}}var cell=table[start.y]?table[start.y][start.x]:undefined;if(!cell){return;}if(callback(cell)===true){return cell;}return traverseTable(table,dir,{x:start.x+dir.x,y:start.y+dir.y},callback);}// Get all the cells
for(var rowIndex=0,rowLength=node.rows.length;rowIndex<rowLength;rowIndex++){for(var cellIndex=0,cellLength=node.rows[rowIndex].cells.length;cellIndex<cellLength;cellIndex++){cells.push(node.rows[rowIndex].cells[cellIndex]);}}// Get a list of all headers reffed to in this rule
var reffedHeaders=[];cells.forEach(function(cell){var headers=cell.getAttribute('headers');if(headers){reffedHeaders=reffedHeaders.concat(headers.split(/\s+/));}var ariaLabel=cell.getAttribute('aria-labelledby');if(ariaLabel){reffedHeaders=reffedHeaders.concat(ariaLabel.split(/\s+/));}});// Get all the headers
var headers=cells.filter(function(cell){if(axe.commons.text.sanitize(cell.textContent)===''){return false;}return cell.nodeName.toUpperCase()==='TH'||['rowheader','columnheader'].indexOf(cell.getAttribute('role'))!==-1;});var tableMatrix;// Look for all the bad headers
return headers.reduce(function(res,header){if(header.id&&reffedHeaders.indexOf(header.id)!==-1){return!res?res:true;}var hasCell=false;var pos=axe.commons.table.getCellPosition(header);// Only get the matrix once we need it
tableMatrix=tableMatrix?tableMatrix:axe.commons.table.toArray(node);// Look for any data cells or row headers that this might refer to
if(axe.commons.table.isColumnHeader(header)){pos.y+=1;hasCell=!!traverseTable(tableMatrix,'down',pos,function(cell){return!axe.commons.table.isColumnHeader(cell);});// Look for any data cells or column headers that this might refer to
}else if(axe.commons.table.isRowHeader(header)){pos.x+=1;hasCell=!!traverseTable(tableMatrix,'right',pos,function(cell){return!axe.commons.table.isRowHeader(cell);});}// report the node as having failed
if(!hasCell){checkResult.relatedNodes(header);}return!res?res:hasCell;},true);}}],"commons":function(){/*exported commons */var commons={};var aria=commons.aria={},lookupTables=aria._lut={};lookupTables.attributes={'aria-activedescendant':{type:'idref'},'aria-atomic':{type:'boolean',values:['true','false']},'aria-autocomplete':{type:'nmtoken',values:['inline','list','both','none']},'aria-busy':{type:'boolean',values:['true','false']},'aria-checked':{type:'nmtoken',values:['true','false','mixed','undefined']},'aria-colcount':{type:'int'},'aria-colindex':{type:'int'},'aria-colspan':{type:'int'},'aria-controls':{type:'idrefs'},'aria-describedby':{type:'idrefs'},'aria-disabled':{type:'boolean',values:['true','false']},'aria-dropeffect':{type:'nmtokens',values:['copy','move','reference','execute','popup','none']},'aria-expanded':{type:'nmtoken',values:['true','false','undefined']},'aria-flowto':{type:'idrefs'},'aria-grabbed':{type:'nmtoken',values:['true','false','undefined']},'aria-haspopup':{type:'boolean',values:['true','false']},'aria-hidden':{type:'boolean',values:['true','false']},'aria-invalid':{type:'nmtoken',values:['true','false','spelling','grammar']},'aria-label':{type:'string'},'aria-labelledby':{type:'idrefs'},'aria-level':{type:'int'},'aria-live':{type:'nmtoken',values:['off','polite','assertive']},'aria-multiline':{type:'boolean',values:['true','false']},'aria-multiselectable':{type:'boolean',values:['true','false']},'aria-orientation':{type:'nmtoken',values:['horizontal','vertical']},'aria-owns':{type:'idrefs'},'aria-posinset':{type:'int'},'aria-pressed':{type:'nmtoken',values:['true','false','mixed','undefined']},'aria-readonly':{type:'boolean',values:['true','false']},'aria-relevant':{type:'nmtokens',values:['additions','removals','text','all']},'aria-required':{type:'boolean',values:['true','false']},'aria-rowcount':{type:'int'},'aria-rowindex':{type:'int'},'aria-rowspan':{type:'int'},'aria-selected':{type:'nmtoken',values:['true','false','undefined']},'aria-setsize':{type:'int'},'aria-sort':{type:'nmtoken',values:['ascending','descending','other','none']},'aria-valuemax':{type:'decimal'},'aria-valuemin':{type:'decimal'},'aria-valuenow':{type:'decimal'},'aria-valuetext':{type:'string'}};lookupTables.globalAttributes=['aria-atomic','aria-busy','aria-controls','aria-describedby','aria-disabled','aria-dropeffect','aria-flowto','aria-grabbed','aria-haspopup','aria-hidden','aria-invalid','aria-label','aria-labelledby','aria-live','aria-owns','aria-relevant'];lookupTables.role={'alert':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'alertdialog':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'application':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'article':{type:'structure',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null,implicit:['article']},'banner':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'button':{type:'widget',attributes:{allowed:['aria-expanded','aria-pressed']},owned:null,nameFrom:['author','contents'],context:null,implicit:['button','input[type="button"]','input[type="image"]']},'cell':{type:'structure',attributes:{allowed:['aria-colindex','aria-colspan','aria-rowindex','aria-rowspan']},owned:null,nameFrom:['author','contents'],context:['row']},'checkbox':{type:'widget',attributes:{required:['aria-checked']},owned:null,nameFrom:['author','contents'],context:null,implicit:['input[type="checkbox"]']},'columnheader':{type:'structure',attributes:{allowed:['aria-expanded','aria-sort','aria-readonly','aria-selected','aria-required']},owned:null,nameFrom:['author','contents'],context:['row']},'combobox':{type:'composite',attributes:{required:['aria-expanded'],allowed:['aria-autocomplete','aria-required','aria-activedescendant']},owned:{all:['listbox','textbox']},nameFrom:['author'],context:null},'command':{nameFrom:['author'],type:'abstract'},'complementary':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null,implicit:['aside']},'composite':{nameFrom:['author'],type:'abstract'},'contentinfo':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'definition':{type:'structure',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'dialog':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null,implicit:['dialog']},'directory':{type:'structure',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author','contents'],context:null},'document':{type:'structure',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null,implicit:['body']},'form':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'grid':{type:'composite',attributes:{allowed:['aria-level','aria-multiselectable','aria-readonly','aria-activedescendant','aria-expanded']},owned:{one:['rowgroup','row']},nameFrom:['author'],context:null},'gridcell':{type:'widget',attributes:{allowed:['aria-selected','aria-readonly','aria-expanded','aria-required']},owned:null,nameFrom:['author','contents'],context:['row']},'group':{type:'structure',attributes:{allowed:['aria-activedescendant','aria-expanded']},owned:null,nameFrom:['author'],context:null,implicit:['details']},'heading':{type:'structure',attributes:{allowed:['aria-level','aria-expanded']},owned:null,nameFrom:['author','contents'],context:null,implicit:['h1','h2','h3','h4','h5','h6']},'img':{type:'structure',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null,implicit:['img']},'input':{nameFrom:['author'],type:'abstract'},'landmark':{nameFrom:['author'],type:'abstract'},'link':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author','contents'],context:null,implicit:['a[href]']},'list':{type:'structure',attributes:{allowed:['aria-expanded']},owned:{all:['listitem']},nameFrom:['author'],context:null,implicit:['ol','ul']},'listbox':{type:'composite',attributes:{allowed:['aria-activedescendant','aria-multiselectable','aria-required','aria-expanded']},owned:{all:['option']},nameFrom:['author'],context:null,implicit:['select']},'listitem':{type:'structure',attributes:{allowed:['aria-level','aria-posinset','aria-setsize','aria-expanded']},owned:null,nameFrom:['author','contents'],context:['list'],implicit:['li']},'log':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'main':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'marquee':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'math':{type:'structure',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'menu':{type:'composite',attributes:{allowed:['aria-activedescendant','aria-expanded']},owned:{one:['menuitem','menuitemradio','menuitemcheckbox']},nameFrom:['author'],context:null},'menubar':{type:'composite',attributes:{allowed:['aria-activedescendant','aria-expanded']},owned:null,nameFrom:['author'],context:null},'menuitem':{type:'widget',attributes:null,owned:null,nameFrom:['author','contents'],context:['menu','menubar']},'menuitemcheckbox':{type:'widget',attributes:{required:['aria-checked']},owned:null,nameFrom:['author','contents'],context:['menu','menubar']},'menuitemradio':{type:'widget',attributes:{allowed:['aria-selected','aria-posinset','aria-setsize'],required:['aria-checked']},owned:null,nameFrom:['author','contents'],context:['menu','menubar']},'navigation':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'none':{type:'structure',attributes:null,owned:null,nameFrom:['author'],context:null},'note':{type:'structure',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'option':{type:'widget',attributes:{allowed:['aria-selected','aria-posinset','aria-setsize','aria-checked']},owned:null,nameFrom:['author','contents'],context:['listbox']},'presentation':{type:'structure',attributes:null,owned:null,nameFrom:['author'],context:null},'progressbar':{type:'widget',attributes:{allowed:['aria-valuetext','aria-valuenow','aria-valuemax','aria-valuemin']},owned:null,nameFrom:['author'],context:null},'radio':{type:'widget',attributes:{allowed:['aria-selected','aria-posinset','aria-setsize'],required:['aria-checked']},owned:null,nameFrom:['author','contents'],context:null,implicit:['input[type="radio"]']},'radiogroup':{type:'composite',attributes:{allowed:['aria-activedescendant','aria-required','aria-expanded']},owned:{all:['radio']},nameFrom:['author'],context:null},'range':{nameFrom:['author'],type:'abstract'},'region':{type:'structure',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null,implicit:['section']},'roletype':{type:'abstract'},'row':{type:'structure',attributes:{allowed:['aria-level','aria-selected','aria-activedescendant','aria-expanded']},owned:{one:['cell','columnheader','rowheader','gridcell']},nameFrom:['author','contents'],context:['rowgroup','grid','treegrid','table']},'rowgroup':{type:'structure',attributes:{allowed:['aria-activedescendant','aria-expanded']},owned:{all:['row']},nameFrom:['author','contents'],context:['grid','table']},'rowheader':{type:'structure',attributes:{allowed:['aria-sort','aria-required','aria-readonly','aria-expanded','aria-selected']},owned:null,nameFrom:['author','contents'],context:['row']},'scrollbar':{type:'widget',attributes:{required:['aria-controls','aria-orientation','aria-valuenow','aria-valuemax','aria-valuemin'],allowed:['aria-valuetext']},owned:null,nameFrom:['author'],context:null},'search':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'searchbox':{type:'widget',attributes:{allowed:['aria-activedescendant','aria-autocomplete','aria-multiline','aria-readonly','aria-required']},owned:null,nameFrom:['author'],context:null,implicit:['input[type="search"]']},'section':{nameFrom:['author','contents'],type:'abstract'},'sectionhead':{nameFrom:['author','contents'],type:'abstract'},'select':{nameFrom:['author'],type:'abstract'},'separator':{type:'structure',attributes:{allowed:['aria-expanded','aria-orientation']},owned:null,nameFrom:['author'],context:null},'slider':{type:'widget',attributes:{allowed:['aria-valuetext','aria-orientation'],required:['aria-valuenow','aria-valuemax','aria-valuemin']},owned:null,nameFrom:['author'],context:null},'spinbutton':{type:'widget',attributes:{allowed:['aria-valuetext','aria-required'],required:['aria-valuenow','aria-valuemax','aria-valuemin']},owned:null,nameFrom:['author'],context:null},'status':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null,implicit:['output']},'structure':{type:'abstract'},'switch':{type:'widget',attributes:{required:['aria-checked']},owned:null,nameFrom:['author','contents'],context:null},'tab':{type:'widget',attributes:{allowed:['aria-selected','aria-expanded']},owned:null,nameFrom:['author','contents'],context:['tablist']},'table':{type:'structure',attributes:{allowed:['aria-colcount','aria-rowcount']},owned:{one:['rowgroup','row']},nameFrom:['author'],context:null,implicit:['table']},'tablist':{type:'composite',attributes:{allowed:['aria-activedescendant','aria-expanded','aria-level','aria-multiselectable']},owned:{all:['tab']},nameFrom:['author'],context:null},'tabpanel':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'text':{type:'structure',owned:null,nameFrom:['author','contents'],context:null},'textbox':{type:'widget',attributes:{allowed:['aria-activedescendant','aria-autocomplete','aria-multiline','aria-readonly','aria-required']},owned:null,nameFrom:['author'],context:null,implicit:['input[type="text"]','input:not([type])']},'timer':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author'],context:null},'toolbar':{type:'structure',attributes:{allowed:['aria-activedescendant','aria-expanded']},owned:null,nameFrom:['author'],context:null,implicit:['menu[type="toolbar"]']},'tooltip':{type:'widget',attributes:{allowed:['aria-expanded']},owned:null,nameFrom:['author','contents'],context:null},'tree':{type:'composite',attributes:{allowed:['aria-activedescendant','aria-multiselectable','aria-required','aria-expanded']},owned:{all:['treeitem']},nameFrom:['author'],context:null},'treegrid':{type:'composite',attributes:{allowed:['aria-activedescendant','aria-expanded','aria-level','aria-multiselectable','aria-readonly','aria-required']},owned:{all:['treeitem']},nameFrom:['author'],context:null},'treeitem':{type:'widget',attributes:{allowed:['aria-checked','aria-selected','aria-expanded','aria-level','aria-posinset','aria-setsize']},owned:null,nameFrom:['author','contents'],context:['treegrid','tree']},'widget':{type:'abstract'},'window':{nameFrom:['author'],type:'abstract'}};var color={};commons.color=color;/*exported dom */var dom=commons.dom={};/*exported table */var table=commons.table={};/*exported text */var text=commons.text={};/*exported utils *//*global axe */var utils=commons.utils=axe.utils;/*global aria, axe, lookupTables *//**
 * Get required attributes for a given role
 * @param  {String} role The role to check
 * @return {Array}
 */aria.requiredAttr=function(role){'use strict';var roles=lookupTables.role[role],attr=roles&&roles.attributes&&roles.attributes.required;return attr||[];};/**
 * Get allowed attributes for a given role
 * @param  {String} role The role to check
 * @return {Array}
 */aria.allowedAttr=function(role){'use strict';var roles=lookupTables.role[role],attr=roles&&roles.attributes&&roles.attributes.allowed||[],requiredAttr=roles&&roles.attributes&&roles.attributes.required||[];return attr.concat(lookupTables.globalAttributes).concat(requiredAttr);};/**
 * Check if an aria- attribute name is valid
 * @param  {String} att The attribute name
 * @return {Boolean}
 */aria.validateAttr=function(att){'use strict';return!!lookupTables.attributes[att];};/**
 * Validate the value of an ARIA attribute
 * @param  {HTMLElement} node The element to check
 * @param  {String} attr The name of the attribute
 * @return {Boolean}
 */aria.validateAttrValue=function(node,attr){//jshint maxcomplexity: 12
'use strict';var matches,list,doc=document,value=node.getAttribute(attr),attrInfo=lookupTables.attributes[attr];if(!attrInfo){return true;}switch(attrInfo.type){case'boolean':case'nmtoken':return typeof value==='string'&&attrInfo.values.indexOf(value.toLowerCase())!==-1;case'nmtokens':list=axe.utils.tokenList(value);// Check if any value isn't in the list of values
return list.reduce(function(result,token){return result&&attrInfo.values.indexOf(token)!==-1;// Initial state, fail if the list is empty
},list.length!==0);case'idref':return!!(value&&doc.getElementById(value));case'idrefs':list=axe.utils.tokenList(value);// Check if any value isn't in the list of values
return list.reduce(function(result,token){return!!(result&&doc.getElementById(token));// Initial state, fail if the list is empty
},list.length!==0);case'string':// anything goes
return true;case'decimal':matches=value.match(/^[-+]?([0-9]*)\.?([0-9]*)$/);return!!(matches&&(matches[1]||matches[2]));case'int':return (/^[-+]?[0-9]+$/.test(value));}};/*global aria, dom, text *//**
 * Gets the accessible ARIA label text of a given element
 * @see http://www.w3.org/WAI/PF/aria/roles#namecalculation
 * @param  {HTMLElement} node The element to test
 * @return {Mixed}      String of visible text, or `null` if no label is found
 */aria.label=function(node){var ref,candidate;if(node.getAttribute('aria-labelledby')){// aria-labelledby
ref=dom.idrefs(node,'aria-labelledby');candidate=ref.map(function(thing){return thing?text.visible(thing,true):'';}).join(' ').trim();if(candidate){return candidate;}}// aria-label
candidate=node.getAttribute('aria-label');if(candidate){candidate=text.sanitize(candidate).trim();if(candidate){return candidate;}}return null;};/*global aria, lookupTables, axe *//**
 * Check if a given role is valid
 * @param  {String}  role The role to check
 * @return {Boolean}
 */aria.isValidRole=function(role){'use strict';if(lookupTables.role[role]){return true;}return false;};/**
 * Get the roles that get name from contents
 * @return {Array}           Array of roles that match the type
 */aria.getRolesWithNameFromContents=function(){return Object.keys(lookupTables.role).filter(function(r){return lookupTables.role[r].nameFrom&&lookupTables.role[r].nameFrom.indexOf('contents')!==-1;});};/**
 * Get the roles that have a certain "type"
 * @param  {String} roleType The roletype to check
 * @return {Array}           Array of roles that match the type
 */aria.getRolesByType=function(roleType){return Object.keys(lookupTables.role).filter(function(r){return lookupTables.role[r].type===roleType;});};/**
 * Get the "type" of role; either widget, composite, abstract, landmark or `null`
 * @param  {String} role The role to check
 * @return {Mixed}       String if a matching role and its type are found, otherwise `null`
 */aria.getRoleType=function(role){var r=lookupTables.role[role];return r&&r.type||null;};/**
 * Get the required owned (children) roles for a given role
 * @param  {String} role The role to check
 * @return {Mixed}       Either an Array of required owned elements or `null` if there are none
 */aria.requiredOwned=function(role){'use strict';var owned=null,roles=lookupTables.role[role];if(roles){owned=axe.utils.clone(roles.owned);}return owned;};/**
 * Get the required context (parent) roles for a given role
 * @param  {String} role The role to check
 * @return {Mixed}       Either an Array of required context elements or `null` if there are none
 */aria.requiredContext=function(role){'use strict';var context=null,roles=lookupTables.role[role];if(roles){context=axe.utils.clone(roles.context);}return context;};/**
 * Get a list of CSS selectors of nodes that have an implicit role
 * @param  {String} role The role to check
 * @return {Mixed}       Either an Array of CSS selectors or `null` if there are none
 */aria.implicitNodes=function(role){'use strict';var implicit=null,roles=lookupTables.role[role];if(roles&&roles.implicit){implicit=axe.utils.clone(roles.implicit);}return implicit;};/**
 * Get the implicit role for a given node
 * @param  {HTMLElement} node The node to test
 * @return {Mixed}      Either the role or `null` if there is none
 */aria.implicitRole=function(node){'use strict';var role,r,candidate,roles=lookupTables.role;for(role in roles){if(roles.hasOwnProperty(role)){r=roles[role];if(r.implicit){for(var index=0,length=r.implicit.length;index<length;index++){candidate=r.implicit[index];if(axe.utils.matchesSelector(node,candidate)){return role;}}}}}return null;};/*global color *//**
 * @constructor
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 */color.Color=function(red,green,blue,alpha){/** @type {number} */this.red=red;/** @type {number} */this.green=green;/** @type {number} */this.blue=blue;/** @type {number} */this.alpha=alpha;/**
	 * Provide the hex string value for the color
	 * @return {string}
	 */this.toHexString=function(){var redString=Math.round(this.red).toString(16);var greenString=Math.round(this.green).toString(16);var blueString=Math.round(this.blue).toString(16);return'#'+(this.red>15.5?redString:'0'+redString)+(this.green>15.5?greenString:'0'+greenString)+(this.blue>15.5?blueString:'0'+blueString);};var rgbRegex=/^rgb\((\d+), (\d+), (\d+)\)$/;var rgbaRegex=/^rgba\((\d+), (\d+), (\d+), (\d*(\.\d+)?)\)/;/**
	 * Set the color value based on a CSS RGB/RGBA string
	 * @param  {string}  rgb  The string value
	 */this.parseRgbString=function(colorString){// IE can pass transparent as value instead of rgba
if(colorString==='transparent'){this.red=0;this.green=0;this.blue=0;this.alpha=0;return;}var match=colorString.match(rgbRegex);if(match){this.red=parseInt(match[1],10);this.green=parseInt(match[2],10);this.blue=parseInt(match[3],10);this.alpha=1;return;}match=colorString.match(rgbaRegex);if(match){this.red=parseInt(match[1],10);this.green=parseInt(match[2],10);this.blue=parseInt(match[3],10);this.alpha=parseFloat(match[4]);return;}};/**
	 * Get the relative luminance value
	 * using algorithm from http://www.w3.org/WAI/GL/wiki/Relative_luminance
	 * @return {number} The luminance value, ranges from 0 to 1
	 */this.getRelativeLuminance=function(){var rSRGB=this.red/255;var gSRGB=this.green/255;var bSRGB=this.blue/255;var r=rSRGB<=0.03928?rSRGB/12.92:Math.pow((rSRGB+0.055)/1.055,2.4);var g=gSRGB<=0.03928?gSRGB/12.92:Math.pow((gSRGB+0.055)/1.055,2.4);var b=bSRGB<=0.03928?bSRGB/12.92:Math.pow((bSRGB+0.055)/1.055,2.4);return 0.2126*r+0.7152*g+0.0722*b;};};/**
 * Combine the two given color according to alpha blending.
 * @param {Color} fgColor
 * @param {Color} bgColor
 * @return {Color}
 */color.flattenColors=function(fgColor,bgColor){var alpha=fgColor.alpha;var r=(1-alpha)*bgColor.red+alpha*fgColor.red;var g=(1-alpha)*bgColor.green+alpha*fgColor.green;var b=(1-alpha)*bgColor.blue+alpha*fgColor.blue;var a=fgColor.alpha+bgColor.alpha*(1-fgColor.alpha);return new color.Color(r,g,b,a);};/**
 * Get the contrast of two colors
 * @param  {Color}  bgcolor  Background color
 * @param  {Color}  fgcolor  Foreground color
 * @return {number} The contrast ratio
 */color.getContrast=function(bgColor,fgColor){if(!fgColor||!bgColor){return null;}if(fgColor.alpha<1){fgColor=color.flattenColors(fgColor,bgColor);}var bL=bgColor.getRelativeLuminance();var fL=fgColor.getRelativeLuminance();return(Math.max(fL,bL)+0.05)/(Math.min(fL,bL)+0.05);};/**
 * Check whether certain text properties meet WCAG contrast rules
 * @param  {Color}  bgcolor  Background color
 * @param  {Color}  fgcolor  Foreground color
 * @param  {number}  fontSize  Font size of text, in pixels
 * @param  {boolean}  isBold  Whether the text is bold
 * @return {{isValid: boolean, contrastRatio: number}}
 */color.hasValidContrastRatio=function(bg,fg,fontSize,isBold){var contrast=color.getContrast(bg,fg);var isSmallFont=isBold&&Math.ceil(fontSize*72)/96<14||!isBold&&Math.ceil(fontSize*72)/96<18;return{isValid:isSmallFont&&contrast>=4.5||!isSmallFont&&contrast>=3,contrastRatio:contrast};};/*global color */function _getFonts(style){return style.getPropertyValue('font-family').split(/[,;]/g).map(function(font){return font.trim().toLowerCase();});}function elementIsDistinct(node,ancestorNode){var nodeStyle=window.getComputedStyle(node);// Check if the link has a background
if(nodeStyle.getPropertyValue('background-image')!=='none'){return true;}// Check if the link has a border or outline
var hasBorder=['border-bottom','border-top','outline'].reduce(function(result,edge){var borderClr=new color.Color();borderClr.parseRgbString(nodeStyle.getPropertyValue(edge+'-color'));// Check if a border/outline was specified
return result||// or if the current border edge / outline
nodeStyle.getPropertyValue(edge+'-style')!=='none'&&parseFloat(nodeStyle.getPropertyValue(edge+'-width'))>0&&borderClr.alpha!==0;},false);if(hasBorder){return true;}var parentStyle=window.getComputedStyle(ancestorNode);// Compare fonts
if(_getFonts(nodeStyle)[0]!==_getFonts(parentStyle)[0]){return true;}var hasStyle=['text-decoration','font-weight','font-style','font-size'].reduce(function(result,cssProp){return result||nodeStyle.getPropertyValue(cssProp)!==parentStyle.getPropertyValue(cssProp);},false);return hasStyle;}color.elementIsDistinct=elementIsDistinct;/*global dom, color *//* jshint maxstatements: 34, maxcomplexity: 15 *///TODO dsturley: too complex, needs refactor!!
var graphicNodeNames=['IMG','CANVAS','OBJECT','IFRAME','VIDEO','SVG'];/**
 * Returns the non-alpha-blended background color of a node, null if it's an image
 * @param {Element} node
 * @return {Color}
 */function getBackgroundForSingleNode(node){var bgColor,bgColorString,opacity;var nodeStyle=window.getComputedStyle(node);var nodeName=node.nodeName.toUpperCase();if(graphicNodeNames.indexOf(nodeName)!==-1||nodeStyle.getPropertyValue('background-image')!=='none'){return null;}bgColorString=nodeStyle.getPropertyValue('background-color');//Firefox exposes unspecified background as 'transparent' rather than rgba(0,0,0,0)
if(bgColorString==='transparent'){bgColor=new color.Color(0,0,0,0);}else{bgColor=new color.Color();bgColor.parseRgbString(bgColorString);}opacity=nodeStyle.getPropertyValue('opacity');bgColor.alpha=bgColor.alpha*opacity;return bgColor;}/**
 * Determines whether an element has a fully opaque background, whether solid color or an image
 * @param {Element} node
 * @return {Boolean} false if the background is transparent, true otherwise
 */dom.isOpaque=function(node){var bgColor=getBackgroundForSingleNode(node);if(bgColor===null||bgColor.alpha===1){return true;}return false;};/**
 * Returns the elements that are visually "above" this one in z-index order where
 * supported at the position given inside the top-left corner of the provided
 * rectangle. Where not supported (IE < 10), returns the DOM parents.
 * @param {Element} node
 * @param {DOMRect} rect rectangle containing dimensions to consider
 * @return {Array} array of elements
 */var getVisualParents=function getVisualParents(node,rect){var visualParents,thisIndex,posVal;var parents=[];var currentNode=node;var nodeStyle=window.getComputedStyle(currentNode);if(dom.supportsElementsFromPoint(document)){visualParents=dom.elementsFromPoint(document,Math.ceil(rect.left+1),Math.ceil(rect.top+1));thisIndex=visualParents.indexOf(node);// if the element is not present; then something is obscuring it thus making calculation impossible
if(thisIndex===-1){return null;}else if(visualParents&&thisIndex<visualParents.length-1){return visualParents.slice(thisIndex+1);}}while(currentNode!==null){// If the element is positioned, we can't rely on DOM order to find visual parents
posVal=nodeStyle.getPropertyValue('position');if(posVal!=='static'){return null;}currentNode=currentNode.parentElement;if(currentNode!==null){nodeStyle=window.getComputedStyle(currentNode);if(parseInt(nodeStyle.getPropertyValue('height'),10)!==0){parents.push(currentNode);}}}return parents;};/**
 * Returns the flattened background color of an element, or null if it can't be determined because
 * there is no opaque ancestor element visually containing it, or because background images are used.
 * @param {Element} node
 * @param {Array} bgNodes array to which all encountered nodes should be appended
 * @param {Boolean} noScroll (default false)
 * @return {Color}
 *///TODO dsturley; why is this passing `bgNodes`?
color.getBackgroundColor=function(node,bgNodes,noScroll){var parent,parentColor;var bgColor=getBackgroundForSingleNode(node);if(bgNodes&&(bgColor===null||bgColor.alpha!==0)){bgNodes.push(node);}if(bgColor===null||bgColor.alpha===1){return bgColor;}if(noScroll!==true){node.scrollIntoView();}var rect=node.getBoundingClientRect();var currentNode=node;var colorStack=[{color:bgColor,node:node}];var parents=getVisualParents(currentNode,rect);if(!parents){return null;}while(bgColor.alpha!==1){parent=parents.shift();if(!parent&&currentNode.tagName!=='HTML'){return null;//Assume white if top level is not specified
}else if(!parent&&currentNode.tagName==='HTML'){parentColor=new color.Color(255,255,255,1);}else{if(!dom.visuallyContains(node,parent)){return null;}parentColor=getBackgroundForSingleNode(parent);if(bgNodes&&(parentColor===null||parentColor.alpha!==0)){bgNodes.push(parent);}if(parentColor===null){return null;}}currentNode=parent;bgColor=parentColor;colorStack.push({color:bgColor,node:currentNode});}var currColorNode=colorStack.pop();var flattenedColor=currColorNode.color;while((currColorNode=colorStack.pop())!==undefined){flattenedColor=color.flattenColors(currColorNode.color,flattenedColor);}return flattenedColor;};/*global color *//**
 * Returns the flattened foreground color of an element, or null if it can't be determined because
 * of transparency
 * @param {Element} node
 * @param {Boolean} noScroll (default false)
 * @return {Color}
 */color.getForegroundColor=function(node,noScroll){var nodeStyle=window.getComputedStyle(node);var fgColor=new color.Color();fgColor.parseRgbString(nodeStyle.getPropertyValue('color'));var opacity=nodeStyle.getPropertyValue('opacity');fgColor.alpha=fgColor.alpha*opacity;if(fgColor.alpha===1){return fgColor;}var bgColor=color.getBackgroundColor(node,[],noScroll);if(bgColor===null){return null;}return color.flattenColors(fgColor,bgColor);};/* global dom *//**
 * Returns true if the browser supports one of the methods to get elements from point
 * @param {Document} doc The HTML document
 * @return {Boolean}
 */dom.supportsElementsFromPoint=function(doc){var element=doc.createElement('x');element.style.cssText='pointer-events:auto';return element.style.pointerEvents==='auto'||!!doc.msElementsFromPoint;};/**
 * Returns the elements at a particular point in the viewport, in z-index order
 * @param {Document} doc The HTML document
 * @param {Element} x The x coordinate, as an integer
 * @param {Element} y The y coordinate, as an integer
 * @return {Array} Array of Elements
 */dom.elementsFromPoint=function(doc,x,y){var elements=[],previousPointerEvents=[],current,i,d;if(doc.msElementsFromPoint){var nl=doc.msElementsFromPoint(x,y);return nl?Array.prototype.slice.call(nl):null;}// get all elements via elementFromPoint, and remove them from hit-testing in order
while((current=doc.elementFromPoint(x,y))&&elements.indexOf(current)===-1&&current!==null){// push the element and its current style
elements.push(current);previousPointerEvents.push({value:current.style.getPropertyValue('pointer-events'),priority:current.style.getPropertyPriority('pointer-events')});// add "pointer-events: none", to get to the underlying element
current.style.setProperty('pointer-events','none','important');if(dom.isOpaque(current)){break;}}// restore the previous pointer-events values
for(i=previousPointerEvents.length;!!(d=previousPointerEvents[--i]);){elements[i].style.setProperty('pointer-events',d.value?d.value:'',d.priority);}// return our results
return elements;};/*global dom, axe *//**
 * recusively walk up the DOM, checking for a node which matches a selector
 *
 * **WARNING:** this should be used sparingly, as it's not even close to being performant
 *
 * @param {HTMLElement|String} element The starting HTMLElement
 * @param {String} selector The selector for the HTMLElement
 * @return {HTMLElement|null} Either the matching HTMLElement or `null` if there was no match
 */dom.findUp=function(element,target){'use strict';/*jslint browser:true*/var parent,matches=document.querySelectorAll(target),length=matches.length;if(!length){return null;}matches=axe.utils.toArray(matches);parent=element.parentNode;// recrusively walk up the DOM, checking each parent node
while(parent&&matches.indexOf(parent)===-1){parent=parent.parentNode;}return parent;};/*global dom */dom.getElementByReference=function(node,attr){'use strict';var candidate,fragment=node.getAttribute(attr),doc=document;if(fragment&&fragment.charAt(0)==='#'){fragment=fragment.substring(1);candidate=doc.getElementById(fragment);if(candidate){return candidate;}candidate=doc.getElementsByName(fragment);if(candidate.length){return candidate[0];}}return null;};/*global dom *//**
 * Get the coordinates of the element passed into the function relative to the document
 *
 * #### Returns
 *
 * Returns a `Object` with the following properties, which
 * each hold a value representing the pixels for each of the
 * respective coordinates:
 *
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 * - `width`
 * - `height`
 *
 * @param {HTMLElement} el The HTMLElement
 */dom.getElementCoordinates=function(element){'use strict';var scrollOffset=dom.getScrollOffset(document),xOffset=scrollOffset.left,yOffset=scrollOffset.top,coords=element.getBoundingClientRect();return{top:coords.top+yOffset,right:coords.right+xOffset,bottom:coords.bottom+yOffset,left:coords.left+xOffset,width:coords.right-coords.left,height:coords.bottom-coords.top};};/*global dom *//**
 * Get the scroll offset of the document passed in
 *
 * @param {Document} element The element to evaluate, defaults to document
 * @return {Object} Contains the attributes `x` and `y` which contain the scroll offsets
 */dom.getScrollOffset=function(element){'use strict';if(!element.nodeType&&element.document){element=element.document;}// 9 === Node.DOCUMENT_NODE
if(element.nodeType===9){var docElement=element.documentElement,body=element.body;return{left:docElement&&docElement.scrollLeft||body&&body.scrollLeft||0,top:docElement&&docElement.scrollTop||body&&body.scrollTop||0};}return{left:element.scrollLeft,top:element.scrollTop};};/*global dom *//**
 * Gets the width and height of the viewport; used to calculate the right and bottom boundaries of the viewable area.
 *
 * @api private
 * @param  {Object}  window The `window` object that should be measured
 * @return {Object}  Object with the `width` and `height` of the viewport
 */dom.getViewportSize=function(win){'use strict';var body,doc=win.document,docElement=doc.documentElement;if(win.innerWidth){return{width:win.innerWidth,height:win.innerHeight};}if(docElement){return{width:docElement.clientWidth,height:docElement.clientHeight};}body=doc.body;return{width:body.clientWidth,height:body.clientHeight};};/*global dom, axe *//**
 * Get elements referenced via a space-separated token attribute; it will insert `null` for any Element that is not found
 * @param  {HTMLElement} node
 * @param  {String} attr The name of attribute
 * @return {Array}      Array of elements (or `null` if not found)
 */dom.idrefs=function(node,attr){'use strict';var index,length,doc=document,result=[],idrefs=node.getAttribute(attr);if(idrefs){idrefs=axe.utils.tokenList(idrefs);for(index=0,length=idrefs.length;index<length;index++){result.push(doc.getElementById(idrefs[index]));}}return result;};/*global dom *//* jshint maxcomplexity: 20 *//**
 * Determines if an element is focusable
 * @param {HTMLelement} element The HTMLelement
 * @return {Boolean} The element's focusability status
 */dom.isFocusable=function(el){'use strict';if(!el||el.disabled||!dom.isVisible(el)&&el.nodeName.toUpperCase()!=='AREA'){return false;}switch(el.nodeName.toUpperCase()){case'A':case'AREA':if(el.href){return true;}break;case'INPUT':return el.type!=='hidden';case'TEXTAREA':case'SELECT':case'DETAILS':case'BUTTON':return true;}// check if the tabindex is specified and a parseable number
var tabindex=el.getAttribute('tabindex');if(tabindex&&!isNaN(parseInt(tabindex,10))){return true;}return false;};/*global dom */dom.isHTML5=function(doc){var node=doc.doctype;if(node===null){return false;}return node.name==='html'&&!node.publicId&&!node.systemId;};/* global axe, dom, window */function walkDomNode(node,functor){'use strict';var shouldWalk=functor(node);node=node.firstChild;while(node){if(shouldWalk!==false){walkDomNode(node,functor);}node=node.nextSibling;}}var blockLike=['block','list-item','table','flex','grid','inline-block'];function isBlock(elm){'use strict';var display=window.getComputedStyle(elm).getPropertyValue('display');return blockLike.indexOf(display)!==-1||display.substr(0,6)==='table-';}dom.isInTextBlock=function isInTextBlock(node){// jshint maxcomplexity: 15
'use strict';// Ignore if the link is a block
if(isBlock(node)){return false;}// Find the closest parent
var parentBlock=node.parentNode;while(parentBlock.nodeType===1&&!isBlock(parentBlock)){parentBlock=parentBlock.parentNode;}// Find all the text part of the parent block not in a link, and all the text in a link
var parentText='';var linkText='';var inBrBlock=0;// We want to ignore hidden text, and if br / hr is used, only use the section of the parent 
// that has the link we're looking at
walkDomNode(parentBlock,function(currNode){// We're already passed it, skip everything else
if(inBrBlock===2){return false;}if(currNode.nodeType===3){// Add the text to the parent
parentText+=currNode.nodeValue;}// Ignore any node that's not an element (or text as above)
if(currNode.nodeType!==1){return;}var nodeName=(currNode.nodeName||'').toUpperCase();// BR and HR elements break the line
if(['BR','HR'].indexOf(nodeName)!==-1){if(inBrBlock===0){parentText='';linkText='';}else{inBrBlock=2;}// Don't walk nodes with content not displayed on screen.
}else if(currNode.style.display==='none'||currNode.style.overflow==='hidden'||['',null,'none'].indexOf(currNode.style.float)===-1||['',null,'relative'].indexOf(currNode.style.position)===-1){return false;// Don't walk links, we're only interested in what's not in them.
}else if(nodeName==='A'&&currNode.href||(currNode.getAttribute('role')||'').toLowerCase()==='link'){if(currNode===node){inBrBlock=1;}// Grab all the text from this element, but don't walk down it's children
linkText+=currNode.textContent;return false;}});parentText=axe.commons.text.sanitize(parentText);linkText=axe.commons.text.sanitize(linkText);return parentText.length>linkText.length;};/*global dom */dom.isNode=function(candidate){'use strict';return candidate instanceof Node;};/*global dom */dom.isOffscreen=function(element){'use strict';var leftBoundary,docElement=document.documentElement,dir=window.getComputedStyle(document.body||docElement).getPropertyValue('direction'),coords=dom.getElementCoordinates(element);// bottom edge beyond
if(coords.bottom<0){return true;}if(dir==='ltr'){if(coords.right<0){return true;}}else{leftBoundary=Math.max(docElement.scrollWidth,dom.getViewportSize(window).width);if(coords.left>leftBoundary){return true;}}return false;};/*global dom *//*jshint maxcomplexity: 11 *//**
 * Determines if an element is hidden with the clip rect technique
 * @param  {String}  clip Computed property value of clip
 * @return {Boolean}
 */function isClipped(clip){'use strict';var matches=clip.match(/rect\s*\(([0-9]+)px,?\s*([0-9]+)px,?\s*([0-9]+)px,?\s*([0-9]+)px\s*\)/);if(matches&&matches.length===5){return matches[3]-matches[1]<=0&&matches[2]-matches[4]<=0;}return false;}/**
 * Determine whether an element is visible
 *
 * @param {HTMLElement} el The HTMLElement
 * @param {Boolean} screenReader When provided, will evaluate visibility from the perspective of a screen reader
 * @return {Boolean} The element's visibilty status
 */dom.isVisible=function(el,screenReader,recursed){'use strict';var style,nodeName=el.nodeName.toUpperCase(),parent=el.parentNode;// 9 === Node.DOCUMENT
if(el.nodeType===9){return true;}style=window.getComputedStyle(el,null);if(style===null){return false;}if(style.getPropertyValue('display')==='none'||nodeName.toUpperCase()==='STYLE'||nodeName.toUpperCase()==='SCRIPT'||!screenReader&&isClipped(style.getPropertyValue('clip'))||!recursed&&(// visibility is only accurate on the first element
style.getPropertyValue('visibility')==='hidden'||// position does not matter if it was already calculated
!screenReader&&dom.isOffscreen(el))||screenReader&&el.getAttribute('aria-hidden')==='true'){return false;}if(parent){return dom.isVisible(parent,screenReader,true);}return false;};/*global dom *//*jshint maxcomplexity: 20 *//**
 * Check if an element is an inherently visual element
 * @param  {object}  candidate The node to check
 * @return {Boolean}
 */dom.isVisualContent=function(candidate){'use strict';switch(candidate.tagName.toUpperCase()){case'IMG':case'IFRAME':case'OBJECT':case'VIDEO':case'AUDIO':case'CANVAS':case'SVG':case'MATH':case'BUTTON':case'SELECT':case'TEXTAREA':case'KEYGEN':case'PROGRESS':case'METER':return true;case'INPUT':return candidate.type!=='hidden';default:return false;}};/* global dom *//* jshint maxcomplexity: 11 *//**
 * Checks whether a parent element visually contains its child, either directly or via scrolling.
 * Assumes that |parent| is an ancestor of |node|.
 * @param {Element} node
 * @param {Element} parent
 * @return {boolean} True if node is visually contained within parent
 */dom.visuallyContains=function(node,parent){var rectBound=node.getBoundingClientRect();var margin=0.01;var rect={top:rectBound.top+margin,bottom:rectBound.bottom-margin,left:rectBound.left+margin,right:rectBound.right-margin};var parentRect=parent.getBoundingClientRect();var parentTop=parentRect.top;var parentLeft=parentRect.left;var parentScrollArea={top:parentTop-parent.scrollTop,bottom:parentTop-parent.scrollTop+parent.scrollHeight,left:parentLeft-parent.scrollLeft,right:parentLeft-parent.scrollLeft+parent.scrollWidth};//In theory, we should just be able to look at the scroll area as a superset of the parentRect,
//but that's not true in Firefox
if(rect.left<parentScrollArea.left&&rect.left<parentRect.left||rect.top<parentScrollArea.top&&rect.top<parentRect.top||rect.right>parentScrollArea.right&&rect.right>parentRect.right||rect.bottom>parentScrollArea.bottom&&rect.bottom>parentRect.bottom){return false;}var style=window.getComputedStyle(parent);if(rect.right>parentRect.right||rect.bottom>parentRect.bottom){return style.overflow==='scroll'||style.overflow==='auto'||style.overflow==='hidden'||parent instanceof HTMLBodyElement||parent instanceof HTMLHtmlElement;}return true;};/* global dom *//* jshint maxcomplexity: 11 *//**
 * Checks whether a parent element visually overlaps a rectangle, either directly or via scrolling.
 * @param {DOMRect} rect
 * @param {Element} parent
 * @return {boolean} True if rect is visually contained within parent
 */dom.visuallyOverlaps=function(rect,parent){var parentRect=parent.getBoundingClientRect();var parentTop=parentRect.top;var parentLeft=parentRect.left;var parentScrollArea={top:parentTop-parent.scrollTop,bottom:parentTop-parent.scrollTop+parent.scrollHeight,left:parentLeft-parent.scrollLeft,right:parentLeft-parent.scrollLeft+parent.scrollWidth};//In theory, we should just be able to look at the scroll area as a superset of the parentRect,
//but that's not true in Firefox
if(rect.left>parentScrollArea.right&&rect.left>parentRect.right||rect.top>parentScrollArea.bottom&&rect.top>parentRect.bottom||rect.right<parentScrollArea.left&&rect.right<parentRect.left||rect.bottom<parentScrollArea.top&&rect.bottom<parentRect.top){return false;}var style=window.getComputedStyle(parent);if(rect.left>parentRect.right||rect.top>parentRect.bottom){return style.overflow==='scroll'||style.overflow==='auto'||parent instanceof HTMLBodyElement||parent instanceof HTMLHtmlElement;}return true;};/*global table, dom *//**
 * Get the x, y coordinates of a table cell; normalized for rowspan and colspan
 * @param  {HTMLTableCelLElement} cell The table cell of which to get the position
 * @return {Object}      Object with `x` and `y` properties of the coordinates
 */table.getCellPosition=function(cell){var tbl=table.toArray(dom.findUp(cell,'table')),index;for(var rowIndex=0;rowIndex<tbl.length;rowIndex++){if(tbl[rowIndex]){index=tbl[rowIndex].indexOf(cell);if(index!==-1){return{x:index,y:rowIndex};}}}};/*global table *//**
 * Get any associated table headers for a `HTMLTableCellElement`
 * @param  {HTMLTableCellElement} cell The cell of which to get headers
 * @return {Array}      Array of headers associated to the table cell
 */table.getHeaders=function(cell){if(cell.hasAttribute('headers')){return commons.dom.idrefs(cell,'headers');}var headers=[],currentCell,tbl=commons.table.toArray(commons.dom.findUp(cell,'table')),position=commons.table.getCellPosition(cell);//
for(var x=position.x-1;x>=0;x--){currentCell=tbl[position.y][x];if(commons.table.isRowHeader(currentCell)){headers.unshift(currentCell);}}for(var y=position.y-1;y>=0;y--){currentCell=tbl[y][position.x];if(currentCell&&commons.table.isColumnHeader(currentCell)){headers.unshift(currentCell);}}return headers;};/*global table, dom *//**
 * Determine if a `HTMLTableCellElement` is a column header
 * @param  {HTMLTableCellElement}  node The table cell to test
 * @return {Boolean}
 */table.isColumnHeader=function(node){var scope=node.getAttribute('scope');if(scope==='col'||node.getAttribute('role')==='columnheader'){return true;}else if(scope||node.nodeName.toUpperCase()!=='TH'){return false;}var currentCell,position=table.getCellPosition(node),tbl=table.toArray(dom.findUp(node,'table')),cells=tbl[position.y];for(var cellIndex=0,cellLength=cells.length;cellIndex<cellLength;cellIndex++){currentCell=cells[cellIndex];if(currentCell!==node){if(table.isDataCell(currentCell)){return false;}}}return true;};/*global table *//**
 * Determine if a `HTMLTableCellElement` is a data cell
 * @param  {HTMLTableCellElement}  node The table cell to test
 * @return {Boolean}
 */table.isDataCell=function(cell){// @see http://www.whatwg.org/specs/web-apps/current-work/multipage/tables.html#empty-cell
if(!cell.children.length&&!cell.textContent.trim()){return false;}return cell.nodeName.toUpperCase()==='TD';};/*global table, dom *//*jshint maxstatements: 70, maxcomplexity: 40 *//**
 * Determines whether a table is a data table
 * @param  {HTMLTableElement}  node The table to test
 * @return {Boolean}
 * @see http://asurkov.blogspot.co.uk/2011/10/data-vs-layout-table.html
 */table.isDataTable=function(node){var role=node.getAttribute('role');// The element is not focusable and has role=presentation
if((role==='presentation'||role==='none')&&!dom.isFocusable(node)){return false;}// Table inside editable area is data table always since the table structure is crucial for table editing
if(node.getAttribute('contenteditable')==='true'||dom.findUp(node,'[contenteditable="true"]')){return true;}// Table having ARIA table related role is data table
if(role==='grid'||role==='treegrid'||role==='table'){return true;}// Table having ARIA landmark role is data table
if(commons.aria.getRoleType(role)==='landmark'){return true;}// Table having datatable="0" attribute is layout table
if(node.getAttribute('datatable')==='0'){return false;}// Table having summary attribute is data table
if(node.getAttribute('summary')){return true;}// Table having legitimate data table structures is data table
if(node.tHead||node.tFoot||node.caption){return true;}// colgroup / col - colgroup is magically generated
for(var childIndex=0,childLength=node.children.length;childIndex<childLength;childIndex++){if(node.children[childIndex].nodeName.toUpperCase()==='COLGROUP'){return true;}}var cells=0;var rowLength=node.rows.length;var row,cell;var hasBorder=false;for(var rowIndex=0;rowIndex<rowLength;rowIndex++){row=node.rows[rowIndex];for(var cellIndex=0,cellLength=row.cells.length;cellIndex<cellLength;cellIndex++){cell=row.cells[cellIndex];if(cell.nodeName.toUpperCase()==='TH'){return true;}if(!hasBorder&&(cell.offsetWidth!==cell.clientWidth||cell.offsetHeight!==cell.clientHeight)){hasBorder=true;}if(cell.getAttribute('scope')||cell.getAttribute('headers')||cell.getAttribute('abbr')){return true;}if(['columnheader','rowheader'].indexOf(cell.getAttribute('role'))!==-1){return true;}// abbr element as a single child element of table cell
if(cell.children.length===1&&cell.children[0].nodeName.toUpperCase()==='ABBR'){return true;}cells++;}}// Table having nested table is layout table
if(node.getElementsByTagName('table').length){return false;}// Table having only one row or column is layout table (row)
if(rowLength<2){return false;}// Table having only one row or column is layout table (column)
var sampleRow=node.rows[Math.ceil(rowLength/2)];if(sampleRow.cells.length===1&&sampleRow.cells[0].colSpan===1){return false;}// Table having many columns (>= 5) is data table
if(sampleRow.cells.length>=5){return true;}// Table having borders around cells is data table
if(hasBorder){return true;}// Table having differently colored rows is data table
var bgColor,bgImage;for(rowIndex=0;rowIndex<rowLength;rowIndex++){row=node.rows[rowIndex];if(bgColor&&bgColor!==window.getComputedStyle(row).getPropertyValue('background-color')){return true;}else{bgColor=window.getComputedStyle(row).getPropertyValue('background-color');}if(bgImage&&bgImage!==window.getComputedStyle(row).getPropertyValue('background-image')){return true;}else{bgImage=window.getComputedStyle(row).getPropertyValue('background-image');}}// Table having many rows (>= 20) is data table
if(rowLength>=20){return true;}// Wide table (more than 95% of the document width) is layout table
if(dom.getElementCoordinates(node).width>dom.getViewportSize(window).width*0.95){return false;}// Table having small amount of cells (<= 10) is layout table
if(cells<10){return false;}// Table containing embed, object, applet of iframe elements (typical advertisements elements) is layout table
if(node.querySelector('object, embed, iframe, applet')){return false;}// Otherwise it's data table
return true;};/*global table, axe *//**
 * Determine if a `HTMLTableCellElement` is a header
 * @param  {HTMLTableCellElement}  node The table cell to test
 * @return {Boolean}
 */table.isHeader=function(cell){if(table.isColumnHeader(cell)||table.isRowHeader(cell)){return true;}if(cell.id){return!!document.querySelector('[headers~="'+axe.utils.escapeSelector(cell.id)+'"]');}return false;};/*global table, dom *//**
 * Determine if a `HTMLTableCellElement` is a row header
 * @param  {HTMLTableCellElement}  node The table cell to test
 * @return {Boolean}
 */table.isRowHeader=function(node){var scope=node.getAttribute('scope');if(scope==='row'||node.getAttribute('role')==='rowheader'){return true;}else if(scope||node.nodeName.toUpperCase()!=='TH'){return false;}if(table.isColumnHeader(node)){return false;}var currentCell,position=table.getCellPosition(node),tbl=table.toArray(dom.findUp(node,'table'));for(var rowIndex=0,rowLength=tbl.length;rowIndex<rowLength;rowIndex++){currentCell=tbl[rowIndex][position.x];if(currentCell!==node){if(table.isDataCell(currentCell)){return false;}}}return true;};/*global table *//**
 * Converts a table to an Array, normalized for row and column spans
 * @param  {HTMLTableElement} node The table to convert
 * @return {Array}      Array of rows and cells
 */table.toArray=function(node){var table=[];var rows=node.rows;for(var i=0,rowLength=rows.length;i<rowLength;i++){var cells=rows[i].cells;table[i]=table[i]||[];var columnIndex=0;for(var j=0,cellLength=cells.length;j<cellLength;j++){for(var colSpan=0;colSpan<cells[j].colSpan;colSpan++){for(var rowSpan=0;rowSpan<cells[j].rowSpan;rowSpan++){table[i+rowSpan]=table[i+rowSpan]||[];while(table[i+rowSpan][columnIndex]){columnIndex++;}table[i+rowSpan][columnIndex]=cells[j];}columnIndex++;}}}return table;};/*global text, dom, aria, axe *//*jshint maxstatements: 25, maxcomplexity: 19 */var defaultButtonValues={submit:'Submit',reset:'Reset'};var inputTypes=['text','search','tel','url','email','date','time','number','range','color'];var phrasingElements=['A','EM','STRONG','SMALL','MARK','ABBR','DFN','I','B','S','U','CODE','VAR','SAMP','KBD','SUP','SUB','Q','CITE','SPAN','BDO','BDI','BR','WBR','INS','DEL','IMG','EMBED','OBJECT','IFRAME','MAP','AREA','SCRIPT','NOSCRIPT','RUBY','VIDEO','AUDIO','INPUT','TEXTAREA','SELECT','BUTTON','LABEL','OUTPUT','DATALIST','KEYGEN','PROGRESS','COMMAND','CANVAS','TIME','METER'];/**
 * Find a non-ARIA label for an element
 *
 * @param {HTMLElement} element The HTMLElement
 * @return {HTMLElement} The label element, or null if none is found
 */function findLabel(element){var ref=null;if(element.id){ref=document.querySelector('label[for="'+axe.utils.escapeSelector(element.id)+'"]');if(ref){return ref;}}ref=dom.findUp(element,'label');return ref;}function isButton(element){return['button','reset','submit'].indexOf(element.type)!==-1;}function isInput(element){var nodeName=element.nodeName.toUpperCase();return nodeName==='TEXTAREA'||nodeName==='SELECT'||nodeName==='INPUT'&&element.type.toLowerCase()!=='hidden';}function shouldCheckSubtree(element){return['BUTTON','SUMMARY','A'].indexOf(element.nodeName.toUpperCase())!==-1;}function shouldNeverCheckSubtree(element){return['TABLE','FIGURE'].indexOf(element.nodeName.toUpperCase())!==-1;}/**
 * Calculate value of a form element when treated as a value
 *
 * @param {HTMLElement} element The HTMLElement
 * @return {string} The calculated value
 */function formValueText(element){var nodeName=element.nodeName.toUpperCase();if(nodeName==='INPUT'){if(!element.hasAttribute('type')||inputTypes.indexOf(element.getAttribute('type').toLowerCase())!==-1&&element.value){return element.value;}return'';}if(nodeName==='SELECT'){var opts=element.options;if(opts&&opts.length){var returnText='';for(var i=0;i<opts.length;i++){if(opts[i].selected){returnText+=' '+opts[i].text;}}return text.sanitize(returnText);}return'';}if(nodeName==='TEXTAREA'&&element.value){return element.value;}return'';}function checkDescendant(element,nodeName){var candidate=element.querySelector(nodeName.toLowerCase());if(candidate){return text.accessibleText(candidate);}return'';}/**
 * Determine whether an element can be an embedded control
 *
 * @param {HTMLElement} element The HTMLElement
 * @return {boolean} True if embedded control
 */function isEmbeddedControl(e){if(!e){return false;}switch(e.nodeName.toUpperCase()){case'SELECT':case'TEXTAREA':return true;case'INPUT':return!e.hasAttribute('type')||inputTypes.indexOf(e.getAttribute('type').toLowerCase())!==-1;default:return false;}}function shouldCheckAlt(element){var nodeName=element.nodeName.toUpperCase();return nodeName==='INPUT'&&element.type.toLowerCase()==='image'||['IMG','APPLET','AREA'].indexOf(nodeName)!==-1;}function nonEmptyText(t){return!!text.sanitize(t);}/**
 * Determine the accessible text of an element, using logic from ARIA:
 * http://www.w3.org/TR/html-aam-1.0/
 * http://www.w3.org/TR/wai-aria/roles#textalternativecomputation
 *
 * @param {HTMLElement} element The HTMLElement
 * @param {Boolean} inLabelledByContext True when in the context of resolving a labelledBy
 * @return {string}
 */text.accessibleText=function(element,inLabelledByContext){var accessibleNameComputation;var encounteredNodes=[];function getInnerText(element,inLabelledByContext,inControlContext){var nodes=element.childNodes;var returnText='';var node;for(var i=0;i<nodes.length;i++){node=nodes[i];if(node.nodeType===3){returnText+=node.textContent;}else if(node.nodeType===1){if(phrasingElements.indexOf(node.nodeName.toUpperCase())===-1){returnText+=' ';}returnText+=accessibleNameComputation(nodes[i],inLabelledByContext,inControlContext);}}return returnText;}function checkNative(element,inLabelledByContext,inControlContext){// jshint maxstatements:30
var returnText='';var nodeName=element.nodeName.toUpperCase();if(shouldCheckSubtree(element)){returnText=getInnerText(element,false,false)||'';if(nonEmptyText(returnText)){return returnText;}}if(nodeName==='FIGURE'){returnText=checkDescendant(element,'figcaption');if(nonEmptyText(returnText)){return returnText;}}if(nodeName==='TABLE'){returnText=checkDescendant(element,'caption');if(nonEmptyText(returnText)){return returnText;}returnText=element.getAttribute('title')||element.getAttribute('summary')||'';if(nonEmptyText(returnText)){return returnText;}}if(shouldCheckAlt(element)){return element.getAttribute('alt')||'';}if(isInput(element)&&!inControlContext){if(isButton(element)){return element.value||element.title||defaultButtonValues[element.type]||'';}var labelElement=findLabel(element);if(labelElement){return accessibleNameComputation(labelElement,inLabelledByContext,true);}}return'';}function checkARIA(element,inLabelledByContext,inControlContext){if(!inLabelledByContext&&element.hasAttribute('aria-labelledby')){return text.sanitize(dom.idrefs(element,'aria-labelledby').map(function(l){if(element===l){encounteredNodes.pop();}//let element be encountered twice
return accessibleNameComputation(l,true,element!==l);}).join(' '));}if(!(inControlContext&&isEmbeddedControl(element))&&element.hasAttribute('aria-label')){return text.sanitize(element.getAttribute('aria-label'));}return'';}/**
	 * Determine the accessible text of an element, using logic from ARIA:
	 * http://www.w3.org/TR/accname-aam-1.1/#mapping_additional_nd_name
	 *
	 * @param {HTMLElement} element The HTMLElement
	 * @param {Boolean} inLabelledByContext True when in the context of resolving a labelledBy
	 * @param {Boolean} inControlContext True when in the context of textifying a widget
	 * @return {string}
	 */accessibleNameComputation=function accessibleNameComputation(element,inLabelledByContext,inControlContext){'use strict';var returnText;// If the node was already checked or is null, skip
if(element===null||encounteredNodes.indexOf(element)!==-1){return'';//Step 2a: Skip if the element is hidden, unless part of labelledby
}else if(!inLabelledByContext&&!dom.isVisible(element,true)){return'';}encounteredNodes.push(element);var role=element.getAttribute('role');//Step 2b & 2c
returnText=checkARIA(element,inLabelledByContext,inControlContext);if(nonEmptyText(returnText)){return returnText;}//Step 2d - native attribute or elements
returnText=checkNative(element,inLabelledByContext,inControlContext);if(nonEmptyText(returnText)){return returnText;}//Step 2e
if(inControlContext){returnText=formValueText(element);if(nonEmptyText(returnText)){return returnText;}}//Step 2f
if(!shouldNeverCheckSubtree(element)&&(!role||aria.getRolesWithNameFromContents().indexOf(role)!==-1)){returnText=getInnerText(element,inLabelledByContext,inControlContext);if(nonEmptyText(returnText)){return returnText;}}//Step 2g - if text node, return value (handled in getInnerText)
//Step 2h
if(element.hasAttribute('title')){return element.getAttribute('title');}return'';};return text.sanitize(accessibleNameComputation(element,inLabelledByContext));};/*global text, dom, axe, aria *//**
 * Gets the visible text of a label for a given input
 * @see http://www.w3.org/WAI/PF/aria/roles#namecalculation
 * @param  {HTMLElement} node The input to test
 * @return {Mixed}      String of visible text, or `null` if no label is found
 */text.label=function(node){var ref,candidate;candidate=aria.label(node);if(candidate){return candidate;}// explicit label
if(node.id){ref=document.querySelector('label[for="'+axe.utils.escapeSelector(node.id)+'"]');candidate=ref&&text.visible(ref,true);if(candidate){return candidate;}}ref=dom.findUp(node,'label');candidate=ref&&text.visible(ref,true);if(candidate){return candidate;}return null;};/*global text */text.sanitize=function(str){'use strict';return str.replace(/\r\n/g,'\n').replace(/\u00A0/g,' ').replace(/[\s]{2,}/g,' ').trim();};/*global text, dom */text.visible=function(element,screenReader,noRecursing){'use strict';var index,child,nodeValue,childNodes=element.childNodes,length=childNodes.length,result='';for(index=0;index<length;index++){child=childNodes[index];if(child.nodeType===3){nodeValue=child.nodeValue;if(nodeValue&&dom.isVisible(element,screenReader)){result+=child.nodeValue;}}else if(!noRecursing){result+=text.visible(child,screenReader);}}return text.sanitize(result);};/*global axe */axe.utils.toArray=function(thing){'use strict';return Array.prototype.slice.call(thing);};/*global axe */axe.utils.tokenList=function(str){'use strict';return str.trim().replace(/\s{2,}/g,' ').split(' ');};return commons;}()});
